{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","src/shaders/vertex-shader.vert","src/shaders/fragment-shader.frag","src/shaders/update-shader.frag","src/waves-element.js"],"names":["module","exports","cout","console","log","bind","peak","uv","pos","size","dx","x","dy","y","d","Math","sqrt","exp","calculate_initial_condition","R","C","arr","Float32Array","peak_pos","peak_size","r","c","i","init","canvas","initial_condition","gl","getContext","alert","ext","getExtension","vertexShader","createShader","VERTEX_SHADER","vertexShaderSource","updateShader","FRAGMENT_SHADER","updateShaderSource","fragmentShader","fragmentShaderSource","updateProgram","createProgram","program","positionAttributeLocation","getAttribLocation","isVelocityUpdateLocation","getUniformLocation","updateImageLocation","iTimeDeltaLocation","iMouseLocation","imageLocation","texture1","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","mipLevel","internalFormat","RG32F","texWidth","texHeight","texBorder","srcFormat","RG","srcType","FLOAT","texImage2D","texture2","TEXTURE1","attachmentPoint","COLOR_ATTACHMENT0","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","frameBufferStatus","checkFramebufferStatus","statuses","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","positions","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","type","normalize","stride","offset","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","vertexAttribPointer","mouseData","mouse_x","mouse_y","mouse_updated","is_dragging","addEventListener","e","rect","target","getBoundingClientRect","floor","clientX","left","bottom","clientY","args","prev","window","requestAnimationFrame","step","timestamp","deltaTime","useProgram","uniform1i","uniform1f","uniform3i","render","texture","viewport","width","height","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawArrays","TRIANGLES","source","shader","shaderSource","compileShader","success","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","WavesElement","LitElement","styles","css","constructor","setupCanvas","updateComplete","shadowRoot","getElementById","html","customElements","define"],"mappings":"AkBAAA,ACAAA,AFAAA,MCAM,ACAA,AFAA,CCACC,ACAAA,AFAAA,OCAP,ACAA,AFAA,GCAe,ACAA,AFAA,+GAAf,izBCAA,6xHCAA;;;;;;;AJAA,ARmBA,APnBA,ACAA,ACAA,AIkBA,AGAA,ALAA,ACAA,AFlBA,AUAA,AOAA;ATkBA,AHCA;ADnBA,ADmBA,AGAA,ALGA,ACFA,AenBA;ANDA,AHAA,AHAA;AFoBA,AGCA,ALrBA,ACAA,AeEA;;AdoBA,AGtBA,AWGA;;AdoBA;;ASZO,ATaP,MSba,2BAA2B,GACnC,wBAAwB,QAAQ,CAAC,SAAlC,IACC,aAAa,aAAa,CAAC,SAFzB;;AAIP,ATfA,MSeM,iBAAiB,GAAG,MAAM,EAAhC;AfKA,MAAM,UAAU,GAAG,IAAI,OAAJ,EAAnB;AeHM,AfUN,ACLA,ACsBA,ACxBA,AUNA,MEGa,SAAP,CAAgB;AAKpB,EAAA,WAAA,CAAY,OAAZ,EAA6B,SAA7B,EAA8C;AAC5C,ADiBJ,APjBA,MOiBM,ECjBE,SAAS,KAAK,GDiBG,GACrB,CAAC,OAAD,EAAkB,CClBlB,EAAqC,EDkBrC,KAAqD;ACjBnD,ADkBA,AbjBC,AUXP,AH6BA,EMDM,IbjBO,EaiBD,CAAC,GClBD,IAAI,EdCS,GcDb,AdCgB,CcAlB,CDiBJ,CAAsB,GbjBM,CAAC,EaiB7B,CAA6B,OAA7B,EAAsC,EbjBhB,GaiBtB,EADmD,AbhBH,CakBhD,QblBsB,IACvB,MAAM,CAAC,cAAP,CAA4C,OcFrC,CAAN,iBdED,KACG,SAFD;AcCF,ADkBC,AbfN,ACmBO,AUtBP,ARZA,ACAA,AFUO,MDwBM,ACxBA,MAAM,EDwBE,CCxBC,EDwBE,EAAjB,KCxBwB,MAAM,CAAC,IAAI,CAAC,MAAL,EAAD,CAAN,CAAsB,KAAtB,CAA4B,CAA5B,CAA8B,IAAtD;AWqBD,APnBA,ALwBN,ACxBA,MIAa,wBAAP,CAA+B;AQCjC,ADmBE,APnBJ,AIPF,AFNA,AGaA,MDPM,GIOG,OAAL,GAAe,GJPG,GAAG,CIOrB;AACD,ADmBG,AH3BuB,AH2BvB,AHzBN,GULsB,CAapB,EVRI,GGyBU,UHzBG,GAAG,EGyBhB,CAA0B,CHzBN,KGyBpB,EAAgD,SHzBtB,GAAhC;AUSE,ADiBI,AH5BN,ACSA,AJmBE,AJxBF,ACAA,AQJA,ML4BM,AK5BA,CAAC,YL4BY,GAAG,UK5BtB,GACI,CL2BgC,AK3BR,CL2BS,GAAf,AK3BlB,CL2BqC,CK3BJ,IAAjC,CL2B2C,CAAC,GK3BU,CL2BpC,CAApB,EK5BF;AFEA,AFCO,MAAM,KAAK,GAAG,IAAI,OAAJ,EAAd;AK0BD,AZIC,AO5BP,AGKA,AJmBE,AKkFK,MX9EM,AMJP,AKkFO,GClFA,IZIO,CYJd,EZIiB,EAAhB,CMJY,GKkFU,ELlFL,CKkFmC,QLlFzD,EAAiC;AOjBjC,ADkBG,ANAD,ALpBG,AUuGL,CC7FF,CD6FE,ELnFE,EOlBE,AZFO,OUuGA,CAAC,EErGZ,AZFqB,CKoBN,EOlBD,AZFU,AUuGb,CLnFO,CKmFU,IAAjB,CVvGoB,CUuGW,KVvGL,KAAhC;AYGH,AdCG,AKpBP,AMiBA,AJoBM,AJvBA,AS0GF,MZpGS,AOiBP,AJvBO,EWKL,IFqGI,CErGC,GFqGT,ELnFc,CPjBQ,COiBN,EPhBhB,AGPE,CHOD,AGPwB,CWKrB,APkBgB,KOlBK,EPkBT,CPhBhB,COegB,CPdf,IcHD,CdEA,CcFoC,CdInC,GAAA,GAAiB,IAFlB,EAGC,MAAA,GAAoB,IAHrB,KAGmC;AcJjC,ADkBN,AbbM,AOaA,AJlBJ,ACNI,AFIC,AUuGD,ETrGJ,IUkBI,ANAA,AHxBO,AFIA,GFOA,EYgGF,ETrGT,CHKgB,AGJZ,CIiBS,EAAE,ALpBO,CUuGlB,CZhGiB,CIXjB,AFIqB,CKoBN,AHxBM,CJWrB,AGLJ,EHK0B,AOaX,AJjBS,ADHK,GWoBJ,GACvB,AXrBuB,CWqBtB,AXrBiC,ECEpC,CDFuC,CCInC,GUiBF,EAAkB,AXrByB,ECE7C,EAE0B,ADJuB,MWqB/C,IXrByD,CWqBR,CXrB1B,CAApB;AYGD,ADmBA,AbdE,AWPR,AJiBoB,AJrBD,ACKjB,AFAF,AUsGQ,ERtGN,GGgBE,GMIQ,CVzBO,CHWL,CAAC,EINb,CJMgB,AILZ,CQqGS,CT3GI,GHWK,AGX4B,CHW3B,AYgGL,CT3GD,ACKjB,EACmC,AQqGd,EAAH,GAAQ,CRtG1B,EJMM,AIJF,CQoGE,GRtGN,EAEkB,SAFlB,EAE8C;AUA1C,ADkBO,APlBX,ANKM,AKbD,AE0BH,AJjBA,ACAA,EEDF,EOkBW,AbbL,AOaJ,EF1BS,EQ0BD,CVjBH,ACAA,CUDC,GdKO,CAAC,EIJd,CCToB,AFSpB,CIiBc,CAAC,AHjBA,CCTS,AFSR,EIiBhB,CAAmB,EF1BI,CLanB,AIJJ,CJI2B,CMLH,AHCxB,CGAE,ADT4D,AE0BrC,CAAC,EPbtB,EAA+B,AOanC,EDlBwB,ACkBQ,COlB9B,CRCkB,CQDe,CdK/B,EMLoB,EACU,KCiBlC,EDlBwB,EAEtB,OAFsB,EAEA;AQDpB,ADiBW,APff,ANGI,AKbN,AMMF,AJoBG,AJjBC,ACAA,AQmGE,ICnFa,AbZX,KAAK,AKZP,AFQG,ACAA,CECC,CMkGC,CZ/FK,CcLH,AdKL,CKZG,CDQP,CECY,CMkGV,CTnGF,ACAc,CECC,ADTH,EFQK,EGCE,ADTjB,CSOE,AREgB,AFDpB,CECmB,CAAnB,CQFuB,ATNrB,EAAE,CFOJ,CWD2B,KTNhB,KAAP,GSMmB,EAAnB,ATNiB,QAAjB,IAA6B,OAAO,KAAP,KAAiB,UAAhD,CAFJ;AQyBU,AbXL,AKXN,AFOG,ACAA,AQmGE,AG7HN,CVeO,KQ0BwB,GVftB,ACAA,EQmGE,ERnGP,GSeE,AVfF,ACAY,AQmGV,GTnGa,CCAf,MDAA;AWDI,ADiBF,APfF,ANIC,AW5CL,AJyDE,AJjBC,ACAC,AQmGI,AOtIR,CnB6BO,KOuBD,AYpDAC,EbmCE,COeK,ATfJ,CenCC,GLiCG,AKjCAC,CbmCC,ACiBA,GAAG,CHjBb,CEAe,CanCC,CfmCC,AenCAC,CbmCjB,EQFI,AREgB,AanCX,CLiCY,AKjCAC,IAAZ,CZoDiB,AHjB1B,AenC0BF,CZoDC,KOnBvB,CAA6B,AKjCxB,CAAb,ILiC0C,CPmBzB,CAA2B,GAA3B,CAA+B,COnBxC,KPmB8C,CAAC,OAAtC,CAAf;AOlBK,ADiBC,APfF,ANKN,AILG,AFJI,AUuGC,AG9HR,IF0CQ,EXnBK,CYDP,CDmBO,IPdD,CQFC,QREQ,GAAG,EJJS,EIIL,CJJQ,OAA7B,gBIIiB,CAAsB,OAAtB,EAA+B,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;AQDE,ADiBA,APfF,ACgBJ,AJhBA,ACCA,AFJF,AUsGQ,AOtIR,EhBmCE,EUeM,ENCF,EJhBE,CAAC,AgBnCAG,GNgDI,CCfA,AREA,AanCb,CZmDc,AYnDAC,ChBmCN,ASmGO,COtIf,ChBmCuC,CgBnCrBC,CZmDC,CKmFC,COtIpB,CbmCsB,CAAC,AanCAC,CLiCf,AFqGgB,GErGG,AKjC3B,CbmCM,ACgBJ,AKmFa,COrIf,CZkD8B,COlBtB,AFqGuB,KAAhB,GAAwB,IAAI,CAAC,SAAL,CAAe,KAAf,CAA/B;AEpGD,AREF,ADVE,AE0BH,AJhBA,AS2FA,AGtHJ,AIPI,MdwBS,EFUL,AgBlCEC,ChBkCD,CgBlCG,CZkDD,CJhBC,CAAR,AgBlCWH,EAAE,CdwBM,AcxBLI,CAAH,EdwBY,AE0BvB,CYlDkBH,GAAG,CdwBC,AcxBAG,CAAtB,GdwBqE;ASSpE,ADgBG,ARxBN,AE0BC,AYnDC,GZsCkD,CAepD,IYrD2BC,CdyBpB,CczBsB,GAAGL,CdyBpB,CAAC,AczBqB,CAACM,CAAH,GAAOL,EdyBhC,CAAc,AczBqB,CAACK,CAAzC,GdyBK,KACH;AQwBE,APfJ,ADRE,AE2BJ,AJnBE,ASmGA,AG7HJ,AIRI,Gd0BG,CQuBC,CRvBC,GCQD,AalCEC,ChBkCD,AgBlCE,Cd0BG,CO2GH,CCpFK,AMjDFC,CNiDG,CPfH,ADRK,CFQJ,CSmGX,AOrIc,CAACC,CNiDH,CPfG,ADRa,AFQ5B,CUe4C,ARvBf,Cc1BnB,CbkCV,AalCoBN,ChBkCD,CGAC,AalCE,Ed0Ba,CAAC,Ac1BXA,ChBkCD,CgBlCJ,GAAUE,EAAE,Cd0BJ,AFQ5B,CERG,CAFL,AFUmC,AgBlCEA,EAAzB,CAAV;ALiCA,ADiBM,APfJ,ADRL,AFQK,ASmGH,AG9HH,AIPI,CdsBG,EOkGoD,GCvEjD,GMjDCG,ChBkCD,CWFC,CDiBK,CAAC,APfJ,AalCE,CbkCD,AHAA,AgBlCEE,ELgCA,CKhCL,CbkCO,AalCE,ChBkCD,AgBlCGR,IAAF,GAASK,CLgCzB,ADiBM,AMjDC,CNiDqB,AVf1B,AgBlCF,EhBkC0B,IUepB,APfI,COeyB,APfX,OOelB,APfI,EOekC,APfX,IAAI,COe/B,APfgC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AQDH,ADiBM,APfJ,ADPL,AFOQ,ACAN,AW5BF,AINC,EfkCC,MDAM,CCAC,GDAG,ACAH,CDAI,QAAL,CAAc,MAAM,CAAC,CAAD,CAApB;AORF,AH0BJ,AJjBK,ACAH,AFLE,AUwGJ,AGhIF,EHgIE,IVxGW,EKsBL,CG1BQ,CNSN,CGiBC,AHjBA,GGiBG,AHjBA,AFLR,CAAe,AUwGN,CAAC,GRnGG,CGiBC,CAAC,AKkFN,EAAqB,GRnGtB,CAAa,AQmGZ,CLlFD,CAAe,AKkFqB,GF5G5C,CACF,AHyBU,AHjBA,CGiBoB,EHjBE,CAAhC,IMTE,EACkB,OHyBV,CAAZ,CAjBoD,CAmBpD,GG5BI,EAC0C;AIO9C,ADSW,APRT,ANGG,AUVL,ANQE,AFFF,AUqGE,AGjIJ,AIJA,ELgCE,AZAA,CWSI,GbLO,EMHL,AIPA,ANQA,CelCCI,CLgCC,EVEE,AQmGA,CErGF,AZAR,CICY,AJDA,CEEC,CQmGX,CZjGoB,AIFpB,EEDe,CNIf,AELF,CFKG,CMJD,AJDkC,EICd,KJDtB,CFKE,CEL8D,CFK5C,ImBrCtB,CnBqCI,AmBrCiCC,CAArC,CnBqCwC,CmBrCAC,CAAxC,CnBqCwC,CmBpCxC,EnBoCyD,IAArD,KAAmE;AcJnE,ADgBC,APfC,ANIA,AUZG,AFAF,AD2BL,AJnBI,ACCF,AFNO,AUyGL,AGlIN,AIFI,CNoCJ,CNeE,EG3BO,EFAI,ALQP,CAAC,CCCC,CJGK,AETF,CKwBD,COpBC,AJPK,AE4GL,CJ5GQ,CFQN,AIRK,AH2BL,CDnBC,ANII,AETP,CMFP,CMMY,ANNX,CNE8B,CIKjB,AMoGZ,CZhGiB,AETZ,GFSL,AQXF,CMMA,CdKwB,AQVvB,AJOmB,EGkBE,CAAC,AHlBA,KAAvB,CIRA,EAEC,CDwBQ,CAAwB,GAAxB,CAA4B,CC1BrC,ED0BS,CDnBC,ACmBZ,CDnBqC,CELE,MFK3B,EAAkC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AQAH,ADiBH,APhBK,ANIG,AUbW,AFIb,ALKD,ADFD,AUsGI,AGnIR,AIDI,MTuBe,AFIT,EW3BAC,CjB8BD,CFMK,AQTA,CRSC,AmBpCF,EX2BI,CRSC,AmBpCF,CPoID,CVtGX,EMHkB,AW3BFC,CnBoCI,AQTD,ANGJ,CFMM,AYgGL,EJzGH,CAAU,EIyGF,CVtGrB,GUsGI,COpIQ,CnBoCR,AmBpCyBH,CX2BhB,AW3BiB,CX2B5B,EW3B+BC,CAAJ,GAAQ,CAAzB,CAAZ;AnBqCI,AUdU,AH4BhB,AHjBE,AFFA,Aa/BJ,AIAI,InBoCI,CUdA,CH4BF,EYlDIG,CfiCD,CFFC,GFKO,AIHJ,CJGK,AOcJ,AHjBA,EejCI,CfiCD,CAAb,CGiBe,AYlDE,CfiCD,CAAC,EFFE,CEEC,CJGhB,AIHJ,CJG0B,AELI,CEEP,CGiBzB,AHjB0B,AFFxB,EKmB0B,AHjB1B,CJGI,CIHwB;AUlCV,ARiClB,ANKI,AUfqB,AFKvB,ADwBF,AJnBA,ACEE,AFFF,AUoGE,AGpIN,AIAsBZ,InBqCd,AUfqB,AStBPA,CAAC,CX2Bb,CW3Be,EnBqCZ,AGLJ,CGAC,AELI,ANKJ,AiBhCW,CPoIV,CZ/FK,AIHJ,CJGJ,AIHK,EIPM,ALKJ,ADAA,CEEC,CQkGV,CVpGoB,CIAP,AHAf,CDAA,CEEiB,AFN6C,CII5C,AJClB,CCDmB,CKLjB,EFKoB,AELI,ELKF,ACEZ,CAAa,CAAb,CAAV,CAD0B,CAE1B,EDHF,EAAiC,cGAf,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB;AQCJ,ARAI,ANKG,AUhBC,AFMA,AGhCR,AJwDI,AJnBE,ACGA,AQiGE,AGrIR,AIA8BE,IZoD1B,AYpD0BA,CAAC,CTsBO,CStBL,GhBiCvB,CGAC,CCmBC,EG9BV,APWY,CImBC,AKiFA,ILjFI,AJnBA,CGAC,AMoGA,CNpGC,IMoGI,CNpGrB,AELgB,ELKd,CSoGS,CTpGe,ESoGE,GJzGxB,CIyGO,CJzGgB,ADwBhB,CAAa,CKiFW,KLjFxB,CKiF8B,CJzGL,ADwBJ,AKiFU,CJzGL,IIyGI,CLjFH,AKiFlC,CLjFmC,ICxBnC,cDwB4B,EAArB,CAAX,CAF0B,CAG1B;ADnBD,ANKE,AUhBH,AFMM,ALKA,ACGF,AFHF,AiBlCiB,CnBgCd,EmBhCH,CX6BI,IENA,APWA,CKLK,CAAC,ANKJ,ECAE,CKLJ,ALKK,COXC,AFMI,ENKF,CQVV,EPUE,ADAW,IMLX,EELM,AFKe,CELd,CRUY,CAAC,CMLK,GAAG,IAAI,MELlC,CAA0B,CRUb,CACX,KQXF,CFK8B,CELK,AFKO,ANMjC,CAAC,KMNgC,CAAA,CNK7B,EAEX,GMPwC,CAAA,EEL1C,EAAqD,IAArD,EAA2D,KAA3D,CADJ;AJYA,AIVA,ALCI,AGIyB,ADwB3B,AJnBG,ACGD,AFFM,AUkGN,AGrIN,AIAI,IZqDA,EG7BE,ALCO,AGIkB,EW7BrBW,GPqIC,IF7GI,EH6BE,AKgFX,AOrIa,CTwBD,AH6BA,EYrDI,CX6BwB,CW7B1C,CX6B2B,CHJzB,CAAyB,EE4B3B,CAAwB,GAAxB,CAA4B,GAA5B,EAAiC,QAAjC,GG7B4C,CAAC,KAAD,CAA9C;AACA,ALOA,AGJ8C,AD0B7C,AJnBE,ACGC,AFLa,AUqGb,EPtGJ,CEJoD,CA4BpD,CC5B8C,CEH1C,ARWE,CMN0B,GELxB,ARQS,CUqGR,CVjGH,CQZK,ALOX,CAAY,AGJkC,CAAZ,CAA5B,AI0GF,CVrGa,CQRD,ARQd,CQRe,ARE+C,CAW9D,CGNF,EAA8B,IAA9B,CKPgB,CAAhB,ALO4C,OAA5C,EAA0E;AQmBrE,AHzBL,ALIA,AGEM,ALIL,ACGG,AFAF,AUgGI,AGvIR,AICI,IX+BI,EKmBK,AHzBP,CSzBE,CX+BI,CHFV,AGEW,EW/BDC,CAAC,Ed6BX,CKJa,AE6GA,AOtIC,CAAZ,Cd6BM,CKJQ,ASzBCA,CNkDO,AHzBP,AFMX,AIuGW,AOtIC,CTyBlB,AFMsB,AIuGJ,CPzGlB,CQqB4B,AMlDPN,CAAC,EPsIT,CAAW,AOtIC,CAAvB,ENkDyB,ALnBrB,AW/BsBM,CAAC,CPsIhB,CAAP,AOtIJ,CNmDC,CMlDD,gBNkDA,IACK,OAAO,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AHxBL,ALME,AGAG,AJOD,AFAF,AUwFA,AGhIJ,AIGQ,MTwBF,GLMG,Ac9BG,IAAIC,CAAC,Ed8Bb,CKNa,ASxBG,CAAZ,Cd8BW,CKNC,ASxBGA,CTwBrB,ASxBsB,GAAGN,CAAC,Cd8BxB,Ec9B2B,CAAvB,EAA0BM,CAAC,EAA3B,EACA;ATwBN,ALME,AEuBF,AJnBA,ACGI,AWzCN,AIKY,EZoDV,AJnBA,MOVM,APUA,CEJC,EFID,CgBjCUC,Cd6Bd,Ac7Be,EZoDJ,CFvBC,AEuBA,AYpDM,Id6BlB,Cc7BuBF,CAAC,GAAGL,CAAJ,EZoDzB,CAA2B,AYpDMM,CAAb,CTuBS,ASvBnB,CZoDV,CAA+B,CG7BC,EAAhC,GH6BqC,CAAC,OAAtC,EAA+C,QAA/C;AG5BA,ALME,AGDE,ADwBJ,AJnBE,ACGE,AFDF,AUgGA,AGzIJ,AIMY,EX4BN,IELA,AFKI,CAAC,CNOH,CGNC,AEuBA,EK+EE,COnIOnB,EAAE,CX4Bd,CHCF,AGDgB,AIuGhB,CL/EF,AYpDqB,Ed6BJ,EHME,CMPf,ENOkB,CQZC,ARYrB,CGNA,EKNmC,IAArC;AG4BF,APnBE,ADFE,AGDE,AGhCN,AJwDC,AJnBG,ACGE,AFDF,AUgGD,AG1IH,AIMwBI,EbgCtB,AEHI,IKsBA,ALtBI,CAAC,CNOH,AiBpCgBA,Cd8Bf,Ac9BgB,EAAGe,CAAC,CX6BvB,ANOO,CGNT,Cc9B4BP,CjBoChB,AiBpCO,Cd8BN,AHMA,CAAb,CGNA,GQqBkB,APnBA,CAAC,EOoBnB,CAAC,IPpBiB,EAAuB,COoBzC,EAA+B,OAA/B,KAAwD;AACtD,APpBF,APSG,AWlBL,AFMG,ALKD,ACGE,AFDF,Aa3CJ,AIMoCN,CXe7B,KT2BM,EGLL,AiBrC4BA,CTwB3B,ASxB4B,EbiC1B,AajC6BY,CAAC,GbiC1B,APSO,AWlBP,ASxB4BN,CTwB3B,CRaC,CHKqC,CAA7B,CGLL,CAAhB,EHMC,CAAC,AWnBG,EAAP,CXmBO,CWnBmB,EJSjB,CAAa,APUnB,KAAuB,EOVjB,CAAP;AOqBE,APpBH,APUG,AWnBF,ALMA,AEuCG,AJlCH,ACGE,AFDF,AUoEuD,AGhH3D,AIMuB,CP0GhB,GFjFH,EH6CS,CYtED,CpB4CA,CAAC,AMbJ,CHOC,EHMM,CAAC,AWnBJ,ALMA,CNaK,AMbJ,GNaO,AMbJ,CAAb,EAAgB,AEuCO,CR1BV,AMbI,CNaf,CQ0BwB,CFvCN,GEuCU,GAAJ,CFvCC,CAAC,AEuCzB,MFvCiB,GAAiB,CAArC,EAAwC,CAAC,EAAzC,EAA6C;ASE1C,ADsBD,AdVA,AWnBF,ALMG,AFKH,ACGE,AFFK,AUsGX,AGlJA,AIOYE,EpB4CN,IeZO,AZKF,AiBrCCA,GAAG,CTyBL,ASzBMM,Cd+BJ,Ac/BK,CpB4CD,CAAC,AGPP,CQZI,ASzBM,CLgCE,AKhCP,CpB4CT,AMbC,Ac/BK,CpB4CS,AWnBJ,ALMqB,CSCZ,AfYpB,AMbC,Cc/BkBrB,CpB4CD,EMbmB,CSClB,AJPF,ASzBM,CpB4CvB,AWnBkB,ASzBMC,EAAD,CLgCe,ATDI,Cc/BdgB,OTyB9B,CAFwB,ASvBC,CT0BzB,CLKuC,Ac/BCC,Ed+BrC,Oc/BsB,CAAjB,CAHJ,CAGgD;ALiCtD,ADsBI,APvD+B,AP6C/B,AMbD,AMrBL,AR0BI,ACGE,AFHc,Aa5CpB,AIQS,MNsDC,AXlBU,GYJX,AfYI,CAAP,EGRoB,CYJb,ADsBI,CAAC,AXlBU,IWkBlB,ICtBD,CAAc,ADsBI,MCtBE,CAAC,CDsBpB,ICtBmB,ADsBU,CCtB9B,EAA6B,IDsBQ,CAAC,UAArC,ECtBD,CAAP,CDuBQ,EAAE,WAAW,OAAO,CAAC,UAArB,CADJ,EACsC;ACtB3C,ADuBO,AdXH,AWnBD,ALMD,AMrBH,AR0BI,ACGE,AFJuB,Aa5C7B,AISK,CL8BE,AfSA,KY7BD,EDeE,ARUqB,GWoBrB,CH9BI,CAAC,IG8BL,CAAA,MAAA,CAAA,AF7CiB,EE6CjB,CH9BA,ACfoB,CE8Cf,AF9CgB,IDeI,ACfL,EAAe,CE6CnC,EACY,MF9CQ,KACxB,GDcA,ACdG,EDc+C,ECd3C,KAAK,SAAS,EADzB;AE+CU,AH/BJ,ALOJ,AFIE,ACGE,AFLsB,MWsBlB,AH/BJ,QG+BY,CAAC,KAAD,EAA8B,GH/BvB,GAAG,IAAtB;AGgCM,APxBL,AIPF,ACdL,ARyBI,ACGE,AFNI,Aa3CV,AISI,IRYA,CDQwB,CJaf,AINT,EG8BQ,AXvB4B,CiBlC7BH,GAAP,CNyDa,CAAC,AXvBd,cWuBQ,CAAqB,AF7CJ,CLqBQ,EKrBL,CLqBQ,GOwBA,AF7CxC,CE6CyC,APxBG,GOwBhC,EAAkC,OAAlC,YPxB4B,EAAjC;AOyBI,AVpBP,AgBrCH;ALgCD,AfYO,AY/BP,ARyBI,ACEE,AFNF,Aa3CJ,IJsBI,EGmBE,AfYO,KY/BF,ATqBA,CEMC,KLIY,AY/BP,CAAC,EZ+BU,AGVR,CHUO,EeZJ,AVQA,AFNA,EHUqC,CeZjC,AHnBvB,AP2BsB,CAAC,CAAC,CFNxB,EYFsB,AHnBK,ATqBA,IYFuB,IVQ5B,CAAc,EO3BxC,EAA4C,EP2BlB,CAApB,CAnB0B,CAoB1B;AURJ,ADqBkB,AdTlB,AWlBE,ACbF,ARyBE,ACGE,AFPA,AUwGC,AOzIP,ERYE,GEuCM,CCpBF,ADoBE,ADsFK,EFhHL,CXkBC,AoB3CAO,EL+BE,CZEC,CiBjCZ,CPyIqB,AOzIPC,EpB2CE,AGVA,CHUP,Aa8F2B,CAAC,CVxGlB,CiBjCnB,CTyBqB,CXkBC,AWlBA,ASxBtB,CL8BuB,AF0Ga,EFhH5B,ARQiB,AUwG4B,CFhH3B,ARQA,CSrBC,CC6HS,EFhH5B,ACbsB,CDa1B,CIMF,AfYO,CWlBwB,AEgH6C,CE1G5C,AZEf,CSrBjB,CZ+BkC,AGV9B,UHUwC,CAAC,GAAX,CAAe,CAAf,CAAlC;AeXE,ADyBG,AdbN,AWlBK,ALMM,AMnBX,ARyBG,ACGE,AQiGJ,AGpJF,AIYI,CpBwCG,AY/BP,CNqBY,CQiBN,GHvBA,CCbC,CQXGC,CNuDG,ECzBF,AHnBA,ENmBY,GSAP,ATAO,CSAN,CHnBC,MGmBd,AHnBoB,CAAC,AQXE,GAAGZ,CTwBD,CAAC,GCbZ,CDaZ,ACb4B,CDaC,IAA7B,EAD2B,CAE3B,UCdK,GQX8C,CAAC,CRWD,EQXA,EAAM,GAAN,CAArD,GRWG,EAA+D;AGoBnE,ADyBK,ARzBJ,AMnBF,ARyBE,ADLE,AUyGJ,AGrJF,AIcI,ERUF,CGiBA,KK3BQa,CL6BD,AHnBA,AC6HA,CD7HC,AToBA,AiB9BE,Cd6BD,CO0GC,CE1GC,AK7BEF,CRUb,AToBY,CGDC,AMlBT,EC4HW,EVzGE,AiB9BE,CL6BD,AK7BEG,EPuIb,CVzGH,EYDO,AZCY,EUyGE,CP1GhB,CAAkB,CSAC,AF0GA,AOvIf,CAAkB,Ed6BtB,CAAP,CO0G+B,GE1G1B,AF0GkB,COvIZ,CL6ByB,AK7BpC,EPuIsC,KAAK,KAAK,KD5H9C,AC4HG,CAAP,ED3HI,qEADA,GAEA,gCAHJ;AGoBE,ADyBI,AH/BF,ALMH,AMhBD,ARsBE,ACEE,AFPE,AUyGP,AGtJD,CHmJO,CDvHL,IPwBI,IMdI,CIMC,KAAP,MVQkB,GAAG,CAAC,COxBC,EDUE,CCVC,IDUI,CCVhC,EPwBmC,CMd/B,EAAkC,ANcA,CAAC,CAAf,IAAoB,gBAArB,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AUTH,ADyBK,AH/BA,ACVP,ARsBG,ACIE,AFTE,Aa9CR,AIgBI,GL2BK,GK3BD,CAACD,CTuBD,CIMC,AK7BL,EAAS,gBTuBc,GAAG,IAAtB;AIOJ,ADyBI,AH/BD,ALMK,AMfZ,ARqBI,ACIE,AFTE,Aa/CR,AIiBQE,Ed6BI,Ec7BJA,KAAK,CL6BH,AK7BI,CNsDC,ARzBM,GSAP,ATAO,KSAX,CACF,0BK9BK,CAAL,wCL+BI,KAAK;ADwBP,AH/BL,ALMD,AFMA,ADLI,AUwGR,AGxJA,AIkBQ,KTSoB,CG6ClB,AH9BN,AE8GE,IChFQ,ARzBJ,EQyBM,KRzBC,EQwBF,CRxBK,KAAK,OAArB,AOyG4B,GAAwB,YE1G9C,CAAN;AAID,ADuBO,ARzBN,AFMA,ACGE,AFRE,AUwGN,AGzJF,AImBK,EPsIH,IChFQ,EXxBF,CWwBK,CRzBH,CQyBK,ARzBJ,AOyGA,CRhGC,CQgGC,CPzGC,AHCA,CAAC,EWwBM,AD+EmC,ECjFzC,ERvBM,CAAC,IDSI,AFRlB,EGDM,CDSe,AFRA,EGDE,CAA3B,EHC8B,CAAC,GAAN,EAArB,sBEQ4C,IAAvB,CAA4B,CAA5B,CAAvB;AUNL,ADuBS,ARzBN,AFMA,ADLI,AUwGN,AG1JF,CDwCA,CFkHE,IChFQ,ADgFJ,EPzGE,AOyGA,IPzGI,EOuG4C,CC9ErC,ARzBJ,EQyBM,ARzBjB,KQsBW;AClBf,ADsBU,AHhCN,APaA,ACEE,AFPC,AUwGL,AG3JF,AIqBI,EPsIF,IChFQ,EHhCF,AStBEC,EfqCA,CQiGC,AOtIE,EPsIA,COtIIH,ENsDG,AMtDD,CAACI,CNsDE,EAJP,ITbS,GMfG,ENeE,AQ8F2B,AOnIvC,CAAgB,ETsBD,CNe1B,EAA6B,CMf/B,EAAkC,gBStBrB,CAAb;ATuBE,ALOF,AFMA,ACEI,AQiGN,AG5JF,EH4JE,IFhHI,GLOG,AOyGA,EAAE,EPzGE,CAAC,EOqG0C,CF5GvC,ALOA,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AQyBtB,AH/BL,ALOC,AMjBN,ARuBI,ACEI,AFRF,AUyGJ,AOvIE,EPuIF,IPzGI,AMjBA,ATiBA,AiB9BE,CAACD,Gd8BC,Ac9BN,CjB8BO,CUyGC,AOvIE,Ed8BA,AOyGA,OPzGO,CAAC,CAAD,CAAf,EMjBoB,GAAI,SAAD,IACxB,MAAD,IAA2B;AEyCrB,ARxBJ,AMhBA,ARsBF,ACEI,AQ2FgD,AG9KxD,AI6CQD,CPiIR,GOjIQA,IRcI,CQdC,CAAC,Ed8BF,IAAI,AMhBI,GNgBD,AMhBI,KNgBC,KAAL,CAAW,CAAX,CAAb,MMhBoC,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CAApC,kBQdO,CAAL;ANuDE,AHhCN,APcA,ACEI,AFRF,AU0GN,AOxIQ,MPwIF,IV1GI,CQRC,GRQG,CQRC,ARQA,KQRK,EEkHE,CV1GZ,EU0Ge,GV1GG,CQRjB,GEkHqB,CFlHC,AEkHA,IFlHI,CAAC,EEkHb,CAAgB,EFlHR,EEkHR,CAAzB,EFlHgD,SAA5C,EAAuD;AGiCjD,AHhCJ,ALOA,AMhBA,ARuBF,ACEI,AFTsB,AU4G9B,AOzIK,GAdL,CAgBI,ERWM,AC4HJ,IP5GI,IAAI,KAAK,AMhBI,GAAG,CC4HH,GAAG,CAA1B,CP5GM,EAAwB,wBMhBW,GAAf,CAAmB,QAAnB,CAApB;AE0CI,AHhCJ,ALOE,AFOJ,ACEI,AFVF,AU6GN,MAAM,ERnGE,AFV+C,IEU3C,ECTE,CAAC,CDSC,CAAC,CCTC,GDSG,CCTC,CAAC,KAAf,AO4GoB,GAAG,KAAK,CRnGC,AQmGrC,GRnGwC,aAAH,GAAmB,oBAAvC,CAAT;ASiBE,AHhCJ,ACVA,ARwBF,ACEG,AFVC,AU6GR,MFnHM,ACVI,AC6HJ,CR1GA,GMTI,CAAC,ENgBE,CFVA,EQNP,ERMuB,CQNV,ACVI,ATgBO,KShBF,QTgBf,CShBP,CTgBE,CShB+B,CTgBQ,EQNT,AEmHA,GAAG,EFnHE,GEmHG,CFnH3B,AEmHnB,GFnHkD,CAAC,CAAhC,GAAoC,IAAI,CAAC,KAAL,GAAa,WAA9D,CAHqD,CAIrD;AISC,ADuBG,AR1BF,AMhBA,ARwBJ,ACEI,AFVE,AU6GV,AOzII,IRYI,EGmBK,AF0GP,EOzIIG,CL+BM,GACZ,ATJQ,CSIP,IHpBgB,CTgBL,EYIZ,AHpBoB,AQZF,ELgCc,CTJb,Ac5BEC,Cd4BD,CSIe,ATJhB,CAAX,EHAc,EGAI,CSI1B,ATJ2B,AHAD,IAAgB,AiB5BT,CLgCkC,AZJxB,AiB5BTN,CPyID,COzIA,EPyIG,AOzIEA,Cd4BD,CAAC,Ac5BE,Cd4BH,Ac5BIO,Cd4BrC,CO6GqC,CP7GC,AHApC,AU6GV,UOzIqC,EAAuBC,qBAAvB,CAAjC;ALiCE,ADsBI,AHhCJ,ALMI,AMhBA,ARwBN,ACEI,AFVE,AU6GV,AOzII,MTsBE,ACVI,AC6HJ,EEzGM,AKhCFC,Ed4BA,IAAI,CSIK,AJVJ,GIUO,AJVJ,ALMA,AMhBI,ATgBN,EShBQ,AQZF,GAAGH,CLgCG,AHpBA,CGoBC,ATJJ,AO6GA,CP7GP,EO6GU,GEzGN,ATJS,AMhBP,CGqBd,CAAC,AHtBa,AC8HS,CAAjC,COzIqC,CLiC3B,AKjC4BN,ELiCtB,AKjCqB,CLiC3B,ATLQ,Cc5BwBA,CLiCvB,CTLuB,Ac5BE,Cd4B1B,Ac5B2BU,CLiCnC,ETLoC,EKNE,CIWrB,AJXsB,GIWnB,ATLsB,CAAC,CKNL,ALMI,CSKnB,ATLvB,CKN8C,EStBnB,EAAyBC,KTsBd,CAA1C,MIW4C,CAAC,CAAD,CAAvB,GAA6B,GKjCnB,CAAjC,GLiC2D,CAAC,GAAG,GAAG,CAAP,CADzC,EAEZ,OAAO,CAAC,CAAD,CAFK,CAAhB;AAGA,ADoBI,AHhCJ,ALMG,AMhBC,ARwBN,ACEI,AFXS,AUkHjB,AO7II,MTsBE,ACVI,EQZAC,CLkCG,ATRL,CKJE,GIYO,AJZJ,CRKI,CGCF,AMhBI,EAAE,CDUH,CAAC,ECVM,CGsBZ,AKlCW,CLkCG,CHtBN,CQZMN,GTsBT,CAAZ,CIYO,EAAuB,KKlCG,CAACN,EAAD,EAAKA,EAAE,CAACU,ILkClC,CAAP,UKlCiC,EAAyBG,uBAAzB,CAAnC,CAnBJ,CAqBI;ALiCC,ADoBK,AHhCL,ALMK,AMnBc,AR2BpB,ACEI,AFZQ,CYET,IHnBC,CE6CE,EThBF,IAAI,GCVG,CDUC,AFZW,CW4BN,AThBJ,CAAC,ESgBG,CR1BA,CAAX,EDUM,CAAS,CCVC,ADUV,AFZN,CGEA,AHJqC,CEcnB,AFXlB,CGCmB,aDUa,CAAC,KAA3B,IAAoC,cAAc,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;ASiBI,AHhCT,ALMS,AFQR,ACIG,AFbG,AiB1BN,QAAMC,INqDM,AR1BJ,IAAI,GQ0BO,CR1BH,Cc3BG,GAAGC,ENqDI,CAAC,AR1BJ,CAAP,KAAa,Ic3BM,CNqDvB,AMrDwBf,EAAD,Cd2BnB,Cc3BwBK,CNqDG,CR1BH,CAAxB,GAA4B,KQ0BpC,CR1B0C,Ac3Bf,CNqDoB,AR1BJ,CAAD,Ac3BII,Cd2B9C,Wc3B2B,CAAnC;ANsDU,AR1BH,AMjBH,ARyBJ,ACIC,AFbK,AiB1BN,QAAMO,ONqDS,AMrDF,GAAGD,INqDM,CAAC,GAAb,IAA8B,CMrDX,CAACf,EAAD,ERUV,AQVeK,CNqDa,CAAC,CF3C5C,CAAmB,QAAnB,AQVyB,CNqDW,CAAoB,AF3C3B,AQVeO,INqDR,CAAyB,IAAzB,CAA9B,GF3CN,CQVyB,CAA7B,CAvBJ,CAyBI;ANoDS,AHjCX,ALOO,AMjBF,ARyBH,ADTM,EQNR,uBAAuB,CAAC,OAAxB,CAAiC,CAAD,IAAO,CAAC,CAAC,UAAF,CAAc,WAAd,CAA0B,CAA1B,CAAvC;AGkCS,AHjCV,ALOM,AFQH,ACGA,AFZM,AiBzBN,IfqCA,GSHW,CTGP,AerCEK,IfqCE,KAAK,OAAL,CAAa,CAAb,CAAR,MerC+B,GAAGjB,EAAE,CAACkB,iBAAH,CAAqBF,OAArB,EAA8B,YAA9B,CAAlC;Ad2BC,AMjBC,ARyBF,ACGA,AWnEJ,AI8BI,MRSM,EQTAG,GfqCC,GO5BO,CP4Bd,EO5BiB,aAAa,CAAC,CQTD,GAAGnB,EAAE,CAACoB,KRSnB,CAA2B,GAA3B,CAA+B,MAAM,CAAC,CQTtB,CAAsBN,KRStC,CAAf,OQT+B,EAAqC,oBAArC,CAAjC;ANoDM,AHhCV,APgBI,ACED,AFbO,AUkHV,AGxKA,AI8BI,MNmDM,AHhCJ,AEuHA,EO1IIO,EhBmCA,IUgBQ,CAAC,ADuFJ,CFvHC,ARKF,ECWI,ASuGA,CFvHE,CGgCF,CVhBG,ADXF,CW2B6B,CHhC7B,CRKG,CAAZ,EQLwB,ASnBL,EP0I7B,CO1IgCrB,EAAE,CAACoB,QhBoC3B,KAAK,KgBpCmB,CAAsBN,EhBoC9C,CAAc,OAAd,CAAsB,EgBpCE,EAAqC,GhBoC7D,CAA8B,KgBpCN,CAA5B,GhBoCI,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AUiBQ,AHhCV,ALOE,AMlBE,AR8BF,ASqGJ,AGzKA,AI8BI,Id0BA,EKPE,ACXI,EE2CE,ARzBJ,Ac1BEQ,EhBsCA,COnBC,CLOC,CQyBK,CAAC,AHhCH,ACXG,CR8BH,GOnBI,APmBO,COnBN,ALOD,AMlBI,CNkBH,AFYhB,CEZe,CAAf,Ic1BwB,CTmBb,CGgCH,AF3CN,CE2C2B,AMnDFtB,CRQG,CQRD,CTmBA,ASnBCoB,INmDM,CAAC,GAA7B,EAAkC,OAAlC,CMnDmB,CAAsBN,aAAtB,EAAqC,YAArC,CAA3B;ANoDO,AHjCyB,ALQhC,AMlBI,AR8BJ,ACDF,AFdQ,AarDV,AI8BI,CJ9BH,CXmEC,KWnEK,CAAC,AI8BES,EhBsCA,CEZC,AMlBI,INkBX,AFYW,EDfA,CCeG,CQ9BV,CP6BY,CFdD,CAAC,AiBvBI,ChBsCD,ACDH,EFdG,AiBvBIvB,CjBuBjB,CiBvBmB,CjBuBH,AarDnB,AI8BuBoB,CjBuBH,AarD1B,EZoEiB,CAAc,ADfF,EarDI,GZoE9B,CA5CI,AD6BE,CCgBN,CDhBkC,AarDE,CbqDD,AarDE,EbqD/B,EAAiC,CiBvBhB,CAAsBN,aAAtB,CJ9Ba,CAAN,AI8B8B,GJ9BC,EAAhE,CAAD,EACK,AI6BsB,CAAvB,GJ9BJ,CACU,OADV;ALgDc,ALSX,AMlBI,AP6BH,AFdQ,AajDZ,AI0BI,ITiBqE,CAA3D,GAA+D,ASjBnEU,CTiBR,CNoBQ,QAAQ,AFdF,GEcK,AerCE,GAAGxB,EjBuBF,AiBvBI,CjBuBH,AiBvBIoB,EfqCA,CAAC,OFdK,CAAC,CAAD,CAAV,CAAc,EEclB,CAAuB,CFdpB,AiBvBE,CAAsBJ,CjBuBH,MiBvBnB,CfqCL,CAAjB,AerCqD,SAA/B,CAAtB,CA/BJ,CjBsDwB,AiBrBpB,CjBqBQ,EAAwD;AWMrD,AHXb,APqBE,ACDA,AFdU,IEcV,CSTI,GHXA,EPqBE,ECDE,CAAC,CMpBC,EPqBE,ADfF,CQNG,EPqBE,EDfA,CEcf,GMpBqB,ANoBA,CMpBC,CPqBC,CAAC,ECDE,OAAL,EAArB,GMpBa,CAA0B,CPqBxB,CACX,EOtBS,EAAgC,IPqB9B,EAEX,UOvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AGkCK,ARxBL,AMlBI,AR+BM,ACFR,AFdS,AiBtBT,EdyBF,MAAM,AMlBI,AQPFS,GdyBF,AMlBO,AP6BJ,GO7BO,EQPA,GfoCd,AepCiBzB,CROG,CAAC,AQPF,CAAC0B,MRON,CAAe,IAAf,CAAoB,CQPjB,EAAjB,aROc,CAAZ;AE2CD,AHlCH,ALUE,AMlBE,AR4Ba,ACChB,AFdQ,AiBtBP1B,CNQJ,CFDM,AQPFA,EAAE,CAAC2B,ChBsCC,EEbA,CKVC,CCRK,AR4BK,EAIX,CEdK,AMlBI,EDQF,CAAC,CPoBG,CEVf,AFUA,AgBnCA,CAAiB3B,CdyBD,CczBG,CAAC4B,ETef,EAAP,ACR4B,CAAC,CDQH,ESfxB,MROa,CAAwB,GAAxB,CAA4B,GAA5B,CAAX;ADSF,ALUE,AFcF,ASkGE,AOzIF5B,EAAAA,ETeA,ASfE,CAAC6B,CPyIe,ETlGd,COxBC,ELUE,KAAL,AczBF,ChBuCa,AgBvCE7B,EdyBA,AczBE,ChBuCD,AgBvCE8B,ChBuClB,ASkGE,GPhHA,MOgHwC,AOzI1C,EAA8BL,QAA9B,CPyIE,CAAmD;ACvFzD,AHlCG,ALUG,AMnBA,ARiCF,ACjFuB,AF+DjB,AUwVR,AO7WEzB,EP6WF,AO7WEA,EAAE,CAAC+B,CNiDD,AF3CI,ERiCF,GEdG,EOoVT,CDvWgB,ECuWhB,CTtUe,CEdX,AczBF,CdyBe,AMnBI,ATeN,AiBrBI/B,CNiDD,AVVA,CAAhB,AgBvCmB,CAAC8B,CNkDpB,CAAC,AX7BiB,ISfhB,CTeqB,CSfO,ATexB,CW6BN,ARzBE,CAA0B,AHJF,AiBrB1B,CNkD+B,CMlDC9B,EAAE,CdyBD,AczBEgC,CNkDnC,EAA8C,CRzB5C,EAAqC,CQyBvC,IRzB4C,CQyBuB,EMlDnE,EAAmDhC,EAAE,CAACiC,CdyBf,EAArC,UczBF;ANmDG,ARzBF,AMnBG,ARiCJ,ACHJ,AFfY,AUwVR,AGzYJ,AI4BIjC,ENkDG,AMlDHA,EAAE,CAAC+B,ENkDK,CAAC,AVXL,CYnEC,CJkCK,ERiCV,KQjCiB,CIlCrB,AI4BI,CNkDG,AE7EH,AI2BiB/B,CNmDV,AF7Ca,CQND,CAAC8B,GJ5BxB,CJkC8B,CAAC,AIjCH,KI2BxB,CJ3BwB,CF6ErB,AMlD6B9B,CNmDV,CE9EwB,AI2BZ,CAACkC,CJ5BvC,CF8EO,CE7E6C,CF8EpB,IF7CR,EAAhB,CE4CD,GMlDH,EAAmDlC,EAAE,CAACiC,aAAtD;ANoDC,AHrCH,ALWC,AFcC,ADlBQ,AUqUF,AGrXR,AI2BEjC,CN+CJ,CM/CIA,EAAE,CAAC+B,EJ3BA,CZkEC,COzBC,AE4UC,EGrXC,CZkEC,AYlEA,ELyCV,CPyBa,AYlEA,CAAR,EAAW,AI2Bd,CAAiB/B,EhBuCA,ASmTX,AO1Va,ChBuCD,AgBvCE8B,EP0Vc,AGrXd,CHqXd,EGrXiB,GZkEZ,EAAX,AgBvCA,ChBfI,AYZyB,CZmE7B,AYnE8B,AI2BE9B,EAAE,CAACmC,GJ3BrC,EAAwC,CAAC,GAAG,MAA5C,EAAoD,CAAC,AI2BnD,EJ3BF,AI2ByDnC,EJ3BA,AI2BE,CAACoC,OAA1D;ANqDJ,AHtCC,ACTO,ATgBI,AUqUF,AGrXN,AI2BApC,CTOJ,CSPIA,EAAE,CAAC+B,GRKK,CCqVF,CGrXA,KAAK,GAAG,AI2Bd,CAAiB/B,CjBqBH,CiBrBK,CAAC8B,EJ3BA,CAAC,CAAD,CAApB,CHqXM,GAAgD,CO1VtD,CRKI,ATgBuB,CiBrBK9B,CRKG,CTgBL,AiBrBI,CAACqC,GP0V7B,GVrU+B,CAAC,SAAD,CAA7B,CAHkB,AiBlB1B,CjBsBQ,CiBtB+CrC,EAAE,CAACoC,OAA1D;Ad7B2B,AMmCrB,ARkCN,ASmTM,AOzVN,MRIM,EQJAE,CPyVA,ETnTC,CQlCK,CAAC,GQJC,GAAG,ChBsCD,AgBtChB,CRIM,CAAiB,CRkCJ,ASmTb,GAAmC,ETnTjB,CAAC,MAAzB,EAAiC,GQlC3B,CAAoC,CCqVpC,MDrVA,EAA6C,SAA7C;ADUV,ALWA,AMpBS,ARkCH,ADlBM,AUqUF,AGtXN,AI4BA,MTcE,APyBA,EYnEE,AI4BgBC,CP0Vd,CTnTA,GAAG,AYnEA,CAAC,IZmEI,CAAC,CDlBD,CajDV,CAAc,AI4BgB,EjBqBhB,CiBrBmBvC,EjBqBhB,AajDjB,AI4BmC,ChBuCzB,AYnEd,AI4BwCwC,ChBuCtC,CSmTI,AGtXoB,GHsX4B,AO1VtD,GTcgC,GAChC,CAAC,EE2UK,GF3UN,EAAwB,ERMmB,CAAC,IAAvB,CAA4B,EQNzB,GAAqB,CAAC,CAA9C,KAAmD,CRM9B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AQNN,AROM,AUqUV,AGvXI,AI2BF,MJ3BE,CL2CK,CShBwCC,GTgBpC,CAAC,GAAG,AK3CJ,CAAC,AI2B2C,GAAG,EJ3B/C,CI2BX,CJ3BmB,EL2CM,GAAG,CAA1B,AK3CS,CAAT,CL2C6B,CAAC,GAAG,KAAK,CAAC,MAAvC,EAA+C,CAAC,EAAhD,EAAoD;AAClD,ACXA,ARkCF,ADhBM,AalDP,AI0BD,IRMI,CIlCJ,GI4B+DC,ETiBrD,APuBJ,CAAC,AYlEA,CJgCK,EDWE,CCXC,EDWE,ASjBuD,ERMrD,CQNwD,ETiBrD,CAAC,ASjBvB,CTiBsB,CAAlB,YCXW,CAAa,MAAb,EAAqB,CRkCR,IAArB,CAAL,CQlCa,CAAX,ARkC+B;AQjC/B,ARkCA,ADhBI,AalDN,AIyBF,IROI,EIhCF,EIyB8EC,IJzBxE,CZkEC,AYlEA,IJgCQ,AIhCf,AIyBuF,CROvE,AIhCJ,EZkEV,AgBzCwF,ChByC3E,AgBzCjB,EJzBE,EZkEE,CAAkB,CQlClB,CAAwB,GAAxB,CAA4B,GAA5B,ARkCA,EQlCiC,QAAjC;ADWA,ACVD,ATkBK,AalDP,AIwBD,QTkBQ,ASlBuFC,SAAS,GAAG5C,EAAE,CAAC6C,EAA9G,mBTkB6B,IAArB,CAAJ,EAAgC;AAC9B,APuBF,AYjEL,AIuBC,QhB0CI,AgB1C8GC,KTmBrG,CAAP,CSnBmH,EhB0C5G,CgB1C+G9C,EAAE,CAAC+C,KAA/H;AToBK,ACXH,ARkCE,ADhBI,AUqUF,AO/VN/C,ERQE,AQRFA,EAAE,CAACgD,IP+VG,MDvVS,AQRf,CRQgB,AQRFhD,EAAE,CAAC8B,CjB0BH,OUqUR,CDvVJ,CAA2B,AQR7B,CP+V2C,CO/VdQ,CRQ3B,CAA+B,CCuVc,GAAJ,EDvVJ,ATkBN,AUqU3B,AO/VN,CRQwC,CQRDC,CjB2B3B,IAAI,CSnBd,ATmBe,ESnBgC,MQRjD,ERQE,AQRqDE,CjB2B3C,KAAqB,EiB3BjC,EAAiEC,SAAjE,EAA4EC,KjB0BpE,IiB1BR,EAAuFC,SAAvF,EAAkGE,OAAlG,EAA2G/C,iBAA3G,EA3CJ,CA6CI;ANsDE,AHpCC,ALOD,AMlBA,ARkCC,ACLD,AFVM,AUqUV,AGxXA,MVkDW,ADWA,CDDwB,CAQ/B,CUWU,AF/CH,AIhCJ,MAAP,EF+EI,AF/CA,CE+CmB,CR7BnB,CAAoB,AHCR,GEUZ,ESkBA,EAAgD,KTlBf,EFVP,GACf,IAAgB,CAAC,IES5B,CAA+C,OFTpC,CAA8B,mBAA9B,CADL;AW6BV,AR1BA,AMrBG,ARoCC,ACPJ,AFTW,AapDZ,AIyBG,CRtBJ,CNkDE,ADQA,MepCQkD,CfoCD,GAAA,CCRP,CAAY,AHDD,EiB3BK,EjB2BW,CAAC,AiB3BTjD,EAAE,CAAC0B,Cd4BtB,EAAyC,SHD9B,CAAiC,AiB3BzB,EAAjB,iBjB2BS;AW4BX,AHrCI,ALQJ,AFkBI,ACPF,AFTQ,AanDZ,AIwBI1B,EAAAA,EAAE,CAAC2B,INsDE,AHrCI,ALQX,CQ6BQ,AHrCI,CAAR,ANmBK,GCXT,GAAiB,CczBf,CfoCe,AepCE3B,CjB2BH,CiB3BK,CAACkD,GfoCC,CCXvB,CQ6BO,AX3BgB,EW2ByB,CX3BtB,AiB3BxB,EfoCe,CSkBV,CTlByB,ISmBpB,IAAI,ATnBd,EFTsC,CAAC,EW4BpB,GX5BK,CAAqB,KW4BpC,GACP,GX7BsB,CAAhB,UW6BQ,CAAC,OAAD,EAAW,iBAAX,EAAwC,IAAxC,CADP,GAEP,gBAAgB,CAAC,OAAD,EAAW,iBAAX,CAHpB;AAID,AHxCI,ALUD,AMpBJ,AP6BG,AFTS,AiB3BRlD,CTQJ,CSRIA,EAAE,CAAC6B,CROD,GNoBG,Oc3BL,CAAe7B,Cd2Bf,CHAa,AiB3BI,CROD,AQPE8B,Cd2BD,EMpBE,CAAC,AToBZ,CAAW,IAAX,CGAR,AMpBmB,AToBK,AiB3BxB,ERO4B,AQPEmB,KROX,CAAvB,EQPI;AN2DJ,AHxCA,ALSG,AMnBH,ATkB6B,AUoUnB,AO9VNjD,EAAAA,EAAE,CAAC+B,IP8VG,OVpUmB,EiB1BzB,CAAiB/B,CjB0BY,CiB1BV,CjB0BY,AiB1BX8B,QP8Vd,EO9VN,CjB0BwB,AUqUV,CO/VkB9B,EAAE,CAACgC,KP8V7B,SO9VN,EAAmDhC,EAAE,CAACiC,aAAtD;AhB0CE,ACLJ,AFX8C,AUyU5C,AG5XJ,AI0BIjC,EfoCF,AepCEA,EAAE,CAAC+B,CJ1BD,GH4XG,ITzTI,GDhBmC,EiBzB5C,CPkWA,AG5Xe,AI0BE/B,CfoCD,CFXQ,AiBzBL,ChByCD,AYnEC,AI0BC8B,CfoCJ,EDKK,GYnEH,CZmEO,CAAC,EYlE1B,AIyBA,EAAgC9B,ChByC9B,CgBzCgC,ChByCD,AgBzCEkC,CJzB7B,CAAC,IAAP,GAAc,KIyBd,CJzBoB,CAAC,AIyB8BlC,EAAE,CAACiC,CJzBxC,CAAY,QAAZ,CAAd,EIyBA,CJzBsC,SAAS,CAAC,MAAD,CADnD;AVsDE,AFcM,ACLJ,AFZmD,AU0UpD,AOlWCjC,Ed2BF,Ac3BEA,EAAE,CAAC+B,GhByCC,EEdE,ADSA,CCTC,KAAD,AHH6C,CCiBtC,CEdQ,ADSP,AepCd,CAAiB/B,CjBwBO,CEYP,AepCE,CAAC8B,KfoCG,KepCvB,EAAgC9B,EAAE,CAACmC,QfoClB,EAAjB,QepCA,EAAuDnC,EAAE,CAACoC,OAA1D;Ad4BA,ADSA,AFbyD,AUiI3D,AGjLI,AIyBFpC,EAAAA,EAAE,CAAC+B,CJzBM,EVoDL,EDSE,GCTG,GHJgD,AahDvD,CX6DW,CCTC,Ac3Bd,CAAiB/B,CfoCD,CepCG,CAAC8B,CjBuB4C,EAAE,AahDtC,GX6DJ,CAAC,GCTrB,Ac3BJ,EAAgC9B,EfoChC,AepCkC,Cd2BP,Ac3BQqC,Cd2BP,WAAW,CAAC,KAAD,Ac3BvC,Cd2B2B,CUpDzB,AIyBqDrC,CJzBZ,CIyBc,Cd2BP,Ac3BQoC,Kd2BH,Ec3BvD,Gd2B4D,KAAK,KAA7D,CAAJ,EAAyE;AACvE,AMpBN,ARiCQ,ACJJ,AFdwB,AapB1B,AIDEpC,EAAAA,EAAE,CAACgD,CRMD,IP6BI,CCTC,CFaC,GDlBA,AiBrBR,Cd0BE,AFaW,AgBvCChD,ChBuCA,CgBvCE,Cd0BD,Ac1BE8B,CfmCD,GAAG,CCTjB,CADuE,AFcjE,CEZN,Gc3BF,ChBuC2B,ACJD,CAAC,AenCEQ,GRMC,GAAI,EQNlC,ChBuCI,CCJJ,AenCuCC,ChBuCA,IQjCN,IAAsB,KQNvD,EAAuDE,QAAvD,EAAiEC,SAAjE,EAA4EC,SAA5E,EAAuFC,SAAvF,EAAkGE,OAAlG,EAA2G,IAAIvD,YAAJ,CAAiB,MAAM,GAAN,GAAY,CAA7B,CAA3G,EAtDJ,CAwDI;Ad0BE,AMrBJ,ARiCQ,ACJN,AFdQ,AapBA,EJKV,EP6BE,KWlCe,CZsCT,CCJC,CAAC,EFdA,CCkBG,CQjCC,ARiCA,CQjCC,AILL,GZsCF,AYtCiB,CZsCN,ECJjB,AFdiB,CSfnB,AP6BsB,CO7BE,ARiChB,EDlBe,ESfA,IAAS,CP6B9B,AFd4B,CAAC,MAAR,GAAiB,CAA9B;AGON,AMrBF,ARiCM,ACJN,AFdO,AapBP,AIAA,QAAM4D,ERKA,ARiCA,MAAM,CAAC,EQjCE,GAAG,CQLG,GAAGnD,EhBsClB,ACJQ,AelCY,CAACoD,EhBsCC,IAA4B,ACJxD,CDIyD,CCJlC,MDIjB,GgBtCN,CfkCiC,CAAC,MO7BD,GAAf,CAAmB,AP6BrC,mBO7BwD,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;ADUE,APwBG,ACJL,AFdK,AapBL,AIAA,QAAMC,CTcM,ENoBL,QAAP,AelCiB,GAAGrD,EAAE,CAACsD,MTcrB,CACF,QADE,EACkB,ASfA,EAApB,ETcE,EAC8B,OAAA,GAAqB,IADnD,EACuD;AGwCvD,AHvCJ,ALUI,AMrBF,AP8BD,AWlCC,AIAAtD,EAAAA,EAAE,CAACuD,GTeC,ACXA,CEkDQ,CR7BN,AUzBA,CVyBC,GQ6BL,CAAgB,EFlDL,CIJb,CAAe,CIAf,CAAmBvD,CRID,CEkDhB,AEtDF,AIAqB,CJAD,AIAEwD,CNsDY,GEtDlC,EAHuB,CJOvB,AIHA,EJG6B,EQJ7B,EAAmCH,EdyBhB,KAAZ,CAAL,EAAyB,CczB3B;ANuDF,AHxCO,ALWD,AMrBF,ARiCE,ADlBA,AUiIN,AGnJE,AIDArD,EAAAA,ETcK,ASdH,CAACyD,CRID,GEkDG,CAAC,CHxCM,CPuBJ,COvBM,ALWL,AFYA,AS+GA,CVjIA,CSfE,CAAC,CRiCC,CDlBY,CAAC,CCkBV,EEZZ,CAAe,EMrBjB,AQJF,CRIsB,ARiCA,ADlBb,AiBnBezD,CNsDnB,AVjBkB,CEZnB,AczBsB,CNuDpB,AMvDqBwD,EdyBA,AHNW,AUiIxC,EDhJI,CAA6B,ACgJJ,CP3HvB,AFYY,EAAR,GgBrCR,CjBmBI,CSf0B,AQJUL,ChBqCD,ADlBW,GSfP,CRiCvC,EAAyC,QgBrC7C,EAAyDnD,EAAE,CAAC8B,UAA5D,EAAwEmB,QAAxE,EAAkF,CAAlF,EA5DJ,CA8DI;ANsDM,AH1CS,ALYZ,AMrBC,ARiCE,ACjB2C,AFD3C,AUiIN,EC7FM,IAFD,AHxCU,KG0CkB,CXpC3B,ESfI,GTeC,CAAC,IAAN,CAAW,IAAX;AWqCN,AH3Cc,ALab,AMtBU,ARkCL,ADlBA,AUiIN,AGpJA,AICA,KTWI,GSXES,CPmJD,AGpJA,CFuDC,AFpDK,ETgBL,IanBN,CJGkB,ACiJlB,CVjIY,CShBQ,ATgBP,AalBT,CFsDY,GAAG,CEtDV,CIAc,GAAG1D,EjBkBpB,AiBlBsB,CAAC2D,EjBkBD,IAA4B,CAAC,AalBrD,CAAoB,MbkBlB,QiBlBoB,CAA0B3D,EAAE,CAACwD,OJAN,CAAC,GIAxB,CAA1B,IJAiD,EAAW,IAAX,CAA7C,IACA,KAAK,gBAAL,EADA,GAEA,KAAK,OAAL,IAAgB,EAHpB;AFwDE,AH5CuB,ALc1B,AMvBsB,ARmCf,ADlBD,AUiIL,AGjJD,AIFC,ITUyB,EG4CvB,EMtDII,CNsDD,CD6FC,EC7FD,AFrDgB,IQDP,GAAG,CPmJD,GAAa,EAA7B,CAH2B,CAI3B;AC7FI,AH7CA,ACTgB,ARoCd,ADlBH,AUkIH,AGjJF,AIHM,KAAC5D,CTS6B,CST3B,CAAC6D,CjBtBN,KQ+BJ,CG6Ca,AH9C8C,ARUhD,CQRX,GRQe,CWoCG,GXpCC,CAAC,IiBlBd,ENsDO,CAAgB,AMtDI,CjBkBlB,KAAkB,IiBnBd,GNuDN,CAA8B,QAA9B,CAAP;AACD,AH5CL,ALcA,AMzBY,ARqCJ,ADnB2B,AiBjB7B,EdwBN,GcxBO7D,ENmDc,AMnDZ,CdwBH,AcxBI8D,EhBoCF,CEZF,CMzB6B,IRqCrB,CAAC,GQrCT,CADuC,CAEvC,MRoCE,GAAqB,KAAK,CAAC,GAAN,CgBpCvB,ChBoCE,EgBpCsC,uBAF3B;Ad2BjB,AFYM,ADpBG,AUmIT,AOnJI,KAAC9D,EAAE,CjBgBgD,AiBhB/C+D,CPmJH,CT/GC,CEZC,GFYG,GAAG,MAAM,CAAC,CS+GpB,CAAuB,MT/GV,CS+Gb,CT/GM,AS+GyB,CAAC,CAAD,EAAI,CP3HhB,AO2HY,KP3HP,AO2HgB,KP3HjC,AcxBH,CdwBJ,EAAgC,AcxBoB,oBAHnC;ANyDf,AH5CJ,ALeI,AMzBE,ARqCC,ADpBD,AUmIF,AGlJI,AIDF,KAAC/D,CNqDH,AH5CA,CSTK,CAACgE,CJCK,GVuBL,AO2HA,CF1IC,CCVC,EEsDE,AXrCF,AUmIE,EC9FE,AH5CA,CE0IC,CDpJC,ATiBF,CGQG,CQyBE,AHxCjB,CCViB,ATiBD,CGQE,AO2HA,CGlJd,CLQgB,CCVC,ATiBQ,CAAC,AafH,CVuBJ,CMzBN,EAAf,ATiBA,CQPyB,CLe3B,IKfgC,GST9B,GAAwC,GTS9C,EAA+C,AE0I9B,CAA+B,CAA/B,EAAkC,CAAlC,CAAb,sCOvJe;AN0Df,AH5CF,ALeE,AMzBE,ARqCD,AYnCH,AIDI,ITSJ,CSTKhE,CNqDH,CV1C+B,AgBX1B,CRDH,ARuCF,AgBtCMiE,GTSD,ALeA,CKfC,CCVC,CAAC,ENyBR,EQ6BY,AFtDV,CNyBW,AMzBA,CEsDC,GH5ChB,CAAoB,ECVE,CAAC,CDUvB,GSTI,EdwBF,CcxBgC,SRDnB,CAAyB,OAAzB,CAAX,EAA8C,OAA9C,CAAuD,CAAD,IAAe,qCQJxD;ANqDE,AHtCnB,ALeE,AMzBI,ATgBF,AUmIF,AGjJF,AIDI,KN+CJ,AM/CKjE,CdwBH,CcxBK,CAACkE,ERDF,ACmJA,IVnIE,AUmIE,CP1HC,CAAC,AMzBA,CAAC,CTgBD,CAAC,AUmIE,CP1HJ,AMzBL,CNyBJ,AMzBe,CAAX,ITgBE,CAAa,CUmInB,EAAwB,GVnIlB,KAAwB,CAA5B,EAA+B,CiBf/B,GAAyC;ANsD7C,AH5CD,ALeE,AMzBI,ATgBC,AUmIF,AGjJJ,AIRiB,GAAjB,CAhEJ,CAwEI,IRJI,EEwDI,ED6FC,EC7FG,GXtCA,EWsCK,IXtCC,GAAG,EWsCd,EXtCkB,CWuCrB,AXvCsB,IUmItB,CAA6B,GAA7B,CAAiC,CVnI/B,CWuCS,CAAC,CD4FZ,EAAuC,CAAvC,MC5FW,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,AFxDK,ARqCF,ADrBI,AadN,GFyCF,OVNQ,IAAI,CAAC,GDrBC,CCqBN,KAAc,CDrBD,GAAG,ECqBpB,EAA0B,ADrBF,CAAC,KAAL,CAAW,WAAX,CAAhB,EShBsB,QAAxB,EAAkC,MAAlC;AEyDP,AH/CC,ALeE,AMxBG,ARqCC,ADrBE,AUkIF,AGhJJ,AIDA,MAAGR,CRTD,CDiBE,ALeA,AO0HA,KP1HK,CKfC,AP4BA,GO3BR,CLcE,AFaU,ADrBF,AUkIE,CAAC,ET7GE,EEbE,AO0Hf,AOjJgB,CPiJA,CFxIV,CAAC,AP2BW,CDrBD,AiBfG1D,CPiJpB,COjJsB,CjBeF,AiBfG6D,KhBoCV,CAAe,CEbhC,AHR+B,CAAC,CGQH,GKd3B,CAA0B,CRMJ,GAAiB,CAAnC,CAH6B,CQHjC,AROI,AiBhBN,ETSqC,ASRrC,IhBmCiB,CAAoC,KAAK,MO3BxD,CP2Be,CO3BsC,AP2BnD,IO3BF,EAA2D,KAA3D,CADJ;AGiDF,AH/CE,ALcI,AMxBD,ARqCG,ADpBE,AUiIH,AGhJH,AIAI3D,IAAAA,ETQF,EP2BE,CgBnCK,CAAC,EhBmCF,CAAC,EO3BE,GAAG,UP2BV,CAAqB,IAAK,CAAC,UgBnCtB,CAAL,GTQwC,CAAC,AP2BzC,KO3BwC,CAA9C;AACA,ALcG,AMxBF,ACkJE,AGhJD,AIAI,GRfN,ECyJE,CFlIE,IKRI,OLQO,GAAG,AKRA,CLQlB,EKRqB,KAAK,MAAxB;ALSF,ACVD,ARoCO,ADpBE,AadN,AIAC,CRjBL,EQ5DA,CA+EI,ETME,IKRI,GZkCG,GYlCG,CLQC,ARMF,EadiB,CLQZ,AP0BZ,CO1Ba,AP0BA,ADpBF,Aadf,CLQF,ARMkB,GCoBZ,ADpBe,CCoBG,ADpBhB,EAAgB,CAAC,CCoBnB,EDpBsB,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AGQ1C,AFaG,ADpBK,AUiIR,OTjHE,EETG,EO0HE,ET7GE,KEbT,AHPY,CGOG,EO0Hf,GVjIQ,CGOR;AKbF,ALcC,AMvBH,ARoCQ,ADpBI,AUiIT,AGhJC,MJDE,EICE,CLQC,IP2BI,AYnCA,CAAC,CLQC,CAAC,EROA,CAAC,CShBG,ARoCZ,CAAa,AYnCb,CbeY,AafE,CJDC,CDSd,CP2BD,CO3BN,AP2BwB,CQpCC,CDSC,CP2BC,ADpBF,CShBJ,ATgBK,CAAD,CShB3B,ATgBY,AafJ,CAAJ,CZmC8B,CYnCC,QZmCN,CAAe,0BAAf,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AO1BJ,ACRJ,ARoCO,AS6GL,AGjJI,AICF,ITOA,ISPMiE,IJDE,GLQG,ESPI,GAAG,CACd,CJFc,AIEb,CADa,EJDG,AIEb,CAAC,CADS,EAEd,CAAC,CAFa,EAET,CAFS,EAGb,CAHa,CJDgB,CAAC,AII1B,CAHS,EAIb,CAJa,EAIT,CAJS,EAKb,CJN6B,AIChB,CJDhB,CAD6B,AIOvB,CJLN,AIKO,CALS,EAMd,CAAC,CANa,EAMV,CAAC,CANS,CAAlB;ATQA,ALlBsB,AHwBd,AabN,AIOF,QAAMC,ETAA,QRMM,CAAC,CQNG,ESAI,CTAD,CRMD,CiBNKpE,CjBMf,CiBNiB,CjBMH,AiBNIqE,CTAD,CAAC,USAH,CTAvB,CSAA;AdeJ,AFaM,ADrBQ,AabR,AIOFrE,EAAAA,EAAE,CAACsE,ChB2BD,SAAS,AgB3BX,CjBMU,AiBNItE,EAAE,CAACuE,GjBMD,GAAG,MiBNnB,EAA+BH,IjBMA,EAArB,QiBNV;AN+CE,AH/CF,AP4BC,ADrBQ,AabP,AIOFpE,EAAAA,EAAE,CAACwE,GTDC,CG+CQ,MX1CJ,AiBJR,CAAcxE,CN8CZ,CAAmB,AH/CP,ASCE,CAACuE,EjBMF,EQPI,GG+CjB,EAAmC,EH/CrC,CSCA,CTD4B,CSCG,IAAIhF,YAAJ,CAAiB4E,SAAjB,CAA/B,EAA4DnE,EAAE,CAACyE,WAA/D,EA1FJ,CA4FI;AN6CF,AH/CI,AROQ,AabR,MLMA,GG+CG,CAAC,OH/CO,GAAG,EROA,KWwCX,AXxCgB,EWyCf,CHhDoB,AROF,CQPG,IAAD,CAAxB,gBRO4C,CAAC,IAAvB,CAA4B,CAA5B,CAAd;AW0CJ,AHhDJ,AP4BF,AgB1BA,EN8CM,IAFD,AH9CH,EP4BE,AgB1BE/F,GN8C2B,CM9CvB,CTFD,CAAC,CSEG,CAAb,QTFE,CAAoB,AP4BtB,EAAkB,UO5BhB,CAAiC,IAAjC,EAAuC,OAAvC;AGiDF,AHhDC,AP4BC,ADtBQ,AUmIZ,AGhJI,AIQF,MhB2BE,EgB3BcgG,EN+CV,EEvDE,AIQY,EhB2BV,CAAC,AgB3BY1E,EAAE,CAAC+C,EN+CV,AX1CF,AabE,GFuDG,AEvDA,AIQnB,ChB2BE,CAAmB,ADtBF,KAAK,GCsBtB,AYnC2B,Cbaf,AabgB,IbaE,Oabb,CbaqB,AabE,CbaD,AabE,GAAD,EbaI,AabE,CbaD,AabL,CbaI,CAAN,EAAW,CabE,mBbab,CAA9B,EAAgE;AW2CxE,AVpBA,ADtBU,AabR,AIOJ,MNgDE,AVpBA,EYnCE,AIO6B4B,CNgD5B,EEvDE,CFuDF,AEvDG,GAAJ,CAAQ,CAAR,AIOsC,CjBM9B,CAAC,AadwC,CZoCrC,AYlCZ,AIMyC,ChB4B5B,CDtBD,CAAC,CAAC,CiBNlB,GhB4BE,CAAuB,ADtBT,CAAQ,CAAR,EAAW,ICsBzB,CDtB8B,CAAC,KAAjB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;AW2CR,AHjDJ,AP6BC,ADrBU,AiBRX,QAAoDC,GTA7C,GSAmD,CNiD/C,EMjDkD,CAA7D,ENiDgB,AHjDA,KAAK,CAAC,CAAf,GGiDI,CAAgB,AHjDA,KAAK,CAAC,SAAD,CGiDrB,AHjDgB,CGiDiB,AHjDA,KAAjB,GGiDhB,CAAP,CHjDkD,WAAtD,EAAmE;AGkDhE,AHjDD,AEwII,AG9IF,AIKJ,ON+CmB,CM/C6CC,CPyInD,KOzIyD,CJL3D,EIK8D,CJLrE,AIKJ,aPyIM,GAA6B;AFvIjC,AP4BF,ADrBU,AUiIV,AG9IG,AIKH,OJTmB,CISbC,CJLD,CLMC,CP4BC,AgB7BE,EJLA,CIKG9E,EjBQF,AabL,AIKS,CAAC+E,CJTI,CZsCnB,AYtCE,CAP6B,CLiBd,AKLf,CbYc,EQPI,CAAlB,AROiB,EQPI,MROI,CAAC,AiBRhB,EAAZ,YjBQmB,CAAwB,CAAxB,CAAT;AW0CR,AHhDE,AP4BL,ADrBU,AUiIT,AOzIA/E,EAAAA,EAAE,CAACgF,CNiDD,EDwFE,CAAC,KAAK,CFxIC,CGgDC,EAAE,EMjDd,CAAmBF,CN6CA,EH5CC,ASDpB,IPyIK,CFxIoB,AEyIjB,CFzIkB,CAAtB,EAAyB,qBEyII,CAAC,kBAAD,EAAqB,IAArB,CAD5B,CAAL,EAC8D;ACxF5D,AHhDI,AEyIJ,AG/IA,AIKF9E,EAAAA,EAAE,CAACiF,CNiDD,AEtDA,ILMI,CEyIC,GG/IG,CLMC,AKNA,CLMC,EGgDE,EAAE,EEtDd,CAAkB,CAAD,CLMR,CAAL,CAAiB,AEyIrB,CG/IwB,AIK1B,CAA2BhE,CP0ID,EFzIpB,EEyIwB,AG/IE,CAAC,CLMD,CEyIN,EAAxB,CAD4D,CAE5D,CGhJwB,CAAe,CAAf,CAAxB,ELMI,OSDN;AN4CmB,AH1Cb,APvGmB,AD6GjB,AaZP,AIKDjB,EAAAA,EAAE,CN2CF,AE9DA,AImBGkF,KTCG,CKNC,GbYC,CaZG,ILMI,CRMD,CAAC,CQNG,ESDlB,CJLO,AIKgBjE,EJLA,MbYf,CAAoB,MAApB,EAA4B,IAA5B,IiBPR,ETCgD,ASDEvC,CTCD,GSDjD,ETCgD,ASDQgG,ETCA,ESDxD,EAA8DC,KTCd,CAA1C,GSDN,EAAyEC,MAAzE,EAAiFC,MAAjF,EAjGJ,CAmGI;ANgDA,AHhDK,ALYH,AHNM,AUmIN,AG/IA,MVkBO,AUlBP,KFsDM,CDyFA,AG/IA,CAAC,CVkBP,CQoCU,ARpCK,EUlBf,CAAY,CbYD,CW0CI,IX1CT,CAAW,EUmII,CG/IrB,CFsDK,AX1CC,CAAgB,AUoIlB,ECzFF,IDyFQ,CAAC,MCzFE,CAAC,ODyFV,CAAsB,ECzFb,EAAa,ADyFtB,EAA4B,eCzFnB,CDwFb,CCxFuD,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,ARhCD,AMzBF,ATY6B,AaXxB,AIMD,EdkBF,CQmBA,GF5CI,EQOIM,KdkBR,CAAY,EHbe,CiBLV,GjBKc,AiBLX,CdkBpB,CHbiC,CGaC,IMzBT,CTYC,ESXxB,CAAC,SAAD,EAAoB,WAApB,EAAmD,QAAnD,KAA0E;AEyD7E,AHnDO,ALeN,AMpBI,ATUqC,AUqIrC,AO1IiBC,ERLjB,EQKiBA,KderB,CO2HQ,CO1IoB,EAAE,Cde9B,AcfoB,ERLF,ATUuB,CGUxB,AMpBE,GAAf,CAAmB,ATUuB,EAAE,EAAE,AUqI3B,CP3HvB,IMpBI,AC+IwB,EDhJgD,CAExE,MC8IA,EAAmC;AFzIlC,ALeG,AMnBJ,ATQsB,AUsIpB,AGhJJ,AIK+BC,IAAAA,IP2I3B,CP3HE,EUrBC,AIK+B,EAAE,CAAtB,CjBKV,EaVR,MVqBM,AO2Ha,CAAC,EP3HY,KO2H5B,CACI,CAAC,CAAD,CP5HF,CO4H2B,CAAzB,KACI,KAAK,gBAAL,CAAuB,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,CAFR;ACtFR,ARlCI,AMrBE,ATQK,AUwIJ,AGlJJ,AII4CC,IAAAA,ENqDzC,GRlCG,IHlC8B,CAsB7B,EGYN,CQkCa,AMrD2C,EdmBzC,AcnB2C,CNsD1D,CAAC,GMtDiB,EdmBlB,KQmCA,EAAiC,KAAjC,EAAgD,IAAhD,KAAqE;AACnE,AHrDA,ALkBH,AHZO,AUuIL,AGzIH,AINmEC,ENuD/D,EMvD+DA,ETE/D,EGqDM,CAAC,MHrDE,ASFiE,EAAE,CTEhE,KGqDZ,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC,UAAnC,CHrD0C,CAAC,KAAD,EAAQ,SAAR,CAA1C;AGsDD,AHrDA,ALmBH,AMvBI,ACiJH,AOhJmB,CNqDtB,EMrDI,KRDQ,eAAe,GACjB,CAAC,CAAC,QAAF,GAAa,QAAQ,CAAC,OAAtB,GAAgC,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CADpC,CALwE,CAOxE;ADGH,AE8ID,AHvPF,AUuGIzF,EAAAA,MAAM,CAAC0F,gBAAP,CAAwB,WAAxB,EAAqCC,CAAC,IAAI;ANwD9C,AHrDC,ACHK,ATOI,AiBNFN,IAAAA,ENuDF,EFxDM,KQCK,CRDC,AQCAI,EjBMJ,CSPO,EEwDF,GAAG,CAAC,AXjDF,CAAC,CiBNd,GRDwB,AQCA,CRDC,GQCzB,CNuDc,AXjDD,CAAP,CWiDyC,IXjDlB,EAA3B,CWiDY,CXjDmB,ESPpB,CAA6B,EEyD7C,KFzDgB,CAAf;AE0DA,AFzDA,ATOM,AO9GZ,AUwGQ,ENwDF,IAAI,EAAE,AFzDA,EQCEG,IjBMF,AiBNM,ENuDb,CMvDgBD,CAAC,CAACE,CjBML,CAAC,IiBNE,CAASC,OjBMlB,CAAoB,YAAY,CiBNvB,CjBMT,CiBNJ,CjBMwC,IAApC;AWmDN,AF1DO,ATQD,AiBNJT,ENwDF,EF1DO,AQELA,ONwDO,EAAE,AMxDA,CjBML,AiBNMC,OAAV,GNsDH,AMtDuBpG,GjBMH,CAAC,AiBNM,CAAC6G,GjBMrB,CAAmB,CiBNH,CAAWJ,CAAC,CjBM5B,AiBN6BK,OAAF,GAAYJ,IAAI,CAACK,IAA5B,CAApB,CAHsC,CAGiB;ANyDzD,AF3DM,ATSD,AO7GX,EI+JM,GAAG,CF3Dc,CE2DZ,KF3DL,CATwE,ATepE,CWqDQ,AF1DZ,CE0Da,GAHd,CX/CY;AWmDX,AXlDO,AaFD,AILJZ,ENyDF,AEpDM,EILJA,QJKc,CILL,CjBOJ,AiBPKE,CJKI,GbEI,CAAC,EiBPnB,EjBOK,CiBPerG,EjBOM,EiBPF,CAAC6G,IjBOQ,CAAC,AiBPd,CAAWH,IAAI,CAACM,GjBOH,CAA5B,EiBP0B,GAAcP,CAAC,CAACQ,OAA3B,CAApB,CAJsC,CAIoB;ANqD7D,ARhCH,AMtBI,ATSK,AaFP,AN3GJ,CIyJsB,CAAtB,AR/BE,IMtBQ,IIOA,EVeE,AMtBI,CNsBH,AH1C0B,CA8B7B,GSVW,CAAf,EAAkB,AIOpB,EVeQ,EAAgB;AACxB,AMtBI,AIOH,AINGd,IAAAA,KdqBC,AUf8C,IINtC,CAACG,IdqBd,CUfC,EVegB,CUdb,KAAK,AIPL,GdqBsB,AcrBI,CdqBH,GcrBvB,CALsC,CAMtC,MdoBa,CAAsB,AUdnC,EADH,CAFiB,CAIlB,yBVaiB,CAAjB;AQsCJ,ARrCI,AMtBI,AISJ,AN9GJ,AUuGK,GAPD,GNgEE,GRrCG,OAAL,GAAe,OQqCO,ERrCE,CQsCxB,ARtCyB,CQsCxB,OAAD,EAAmC,CRtCpB,CAAsB,KQsCrC,KAA4D,mBRtC7C,CAAf;AQuCE,ARtCH,AMtBK,ATQE,AUyIR,AGxIE,AIPAxF,EAAAA,MAAM,CN0DJ,ADqFG,AO/IE0F,GjBMD,GWoDJ,CAAA,KXpDa,CWoDb,CAAA,ADqFJ,CACI,CCtFA,AXpDiB,AiBNnB,CAAwB,CN2DjB,CDoFT,EAEI,ICvFA,AXpDI,EWqDQ,CDsFZ,AOjJF,EAAqCC,CPiJJ,AOjJK,IAAI,sBP+I5C,EAE6D;ACrFvD,ARtCN,AMvBM,ATQC,AU2IL,AHzPJ,AUwGQ,IN2DA,IM3DGN,IN2DK,CAAC,IM3DG,CN2DJ,AM3DKI,EN2DyB,SM3DtC,EACA;AN2DE,AF7DF,ATQD,AU2IH,AG3IA,AILQ,MN0DF,EErDF,CbnCK,GWwFG,AM1DEG,CN0DD,CErDH,CbAD,AaAE,CILO,GN0DZ,AXrDO,AiBLQD,CN2DX,AM3DY,CAACE,EjBKN,CAAC,CWsDH,AEtDX,CFsDY,CM3DK,CAASC,CJKL,GbAZ,EaAiB,CFsDpB,CAAgB,CXtDK,MWsDE,CAAC,AEtDT,GFsDf,CADJ,CM1De,CN2D4C,CM3DzD,KJK4C,CFqD9C,KErDoD,CAAC,UAA3D,EAAuE;AFuDlE,AF9DD,ATO6B,AU4IjC,AG3IE,AN9GN,AUyGYT,MAAAA,KJKD,IILU,CAACC,MJKhB,CILM,GAAoBpG,IAAI,CAAC6G,KAAL,CAAWJ,CAAC,CAACK,OAAF,GAAYJ,IAAI,CAACK,IAA5B,CAApB,CAFJ,CAE2D;ARF3D,ATMK,AU6IT,AG3IC,QbFyD,CU6IrD,sBAAL;AC1Fc,AFxDV,ATMA,AaEL,AN/GH,AUyGYZ,GNqDN,CAAA,EMrDMA,QjBIC,CiBJQ,CAACE,EjBIO,CAAC,IAAjB,AiBJD,GAAoBrG,EjBIO,EiBJH,CAAC6G,GjBI7B,EAAuC,AiBJf,CAAWH,IAAI,CAACM,MAAL,GAAcP,CAAC,CAACQ,OAA3B,CAApB,CAHJ,CAG8D;AN4DjE,AF7DG,ATME,AU4IN,AGzIF,CF2CF,QD8FS,SV5IO,MAAM,CU4IlB,CAAuB,CV5IF,EU4IrB,CAA2B,CV5IF,CAAC,EU4I1B,EAAiC,MV5I3B,CADqC,AU6I3C,CV3IM,CUsIqD,CAM3D;ADlJI,ATOE,AU4IN,AH3PJ,AUyGYd,MAAAA,SAAS,CAACG,aAAV,GAA0B,IAA1B,CAJJ,CAKI;AN4DZ,AF7DQ,ATOE,AU4IN,AOjJK,IRFD,EE6DF,IF7DQ,CAAC,QAAP,CAAiB,IE6DD,GACpB,cF9DI,CAAuC,eAAvC,EAAwD,SAAxD;AE+DJ,AF9DI,ATOE,AU4IN,AH1PJ,AUyGK,CN4DA,EMrED,KNqEA,EAAmC,KAAnC,EAA+C,IAA/C,KAAoE;AAClE,ARzCJ,AMrBK,ACmJH,AOjJAxF,EN4DE,ARzCJ,AcnBEA,MN4DQ,AM5DF,CN4DG,AM5DF0F,MN4DL,CAAc,CRzCH,CAAC,GQyCO,ARzCR,CQyCS,CRzCC,EcnBvB,CN4DqB,AM5DG,CN4DtB,EAA2B,MM5D7B,CN4DE,CM5DiC,MAAM;AN6DxC,ARzCD,AHfM,AO9JV,AU0JQL,CNwDR,GMxDQA,KdmBC,IcnBQ,CAACI,EjBIJ,EGeV,EHfc,CGeG,AHfF,GGef,CcnBI,GAAwB,KAAxB,GjBIM,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AW0DxE,AR1CI,AMtBE,ATOM,AiBJP,GAFD,KRDQ,CNsBH,KHfG,EGeR,GAAe,AHfF,GGeK,AMtBI,CNsBH,EMtBM,QAAQ,CNsBjC,AMtBkC,aAAT,CAAuB,OAAvB,CAAvB,CAzBwE,CA0BxE;ANsBH,AMrBG,ATMM,AU2IR,AO/IAzF,EAAAA,MP+II,AO/IE,CAAC0F,KjBIC,CU2IG,CAAC,IV3IE,CAAC,IiBJf,CP+II,AO/IoB,IP+IE,GV3IlB,CAAoB,CU2IG,GO/I/B,EAAsC,IP+IZ,CAAe,CV3ID,AiBJI,EjBIpC,EAAoC,IAApC,KU2IkB,CAA8B,IAA9B,CAA1B,EAA+D;AP1HjE,AMtBI,ATMK,AU2IL,AO/IEL,IAAAA,SAAS,CAACI,WAAV,GAAwB,KAAxB;ARDF,ACiJD,AG1IO,AILP,EJKO,CIPR,EA3HJ,CA8HI,YJIwB,GAAA;AJNtB,ATKI,AaEN,WAAO,CbFD,IaEM,SbFO,GAAG,AaEf,CAAkB,IbFnB;AACA,AU2IN,AG1I0B,AIJ1B,MJI0B,EIJpBW,EP8IA,AG1IwB,EAAE,AIJtB,CP8ID,EO9II,CP8ID,CV3ID,KAAL,CAAW,AU2IE,IV3Ib,AU2IM,CV3IU,IU2IM,QAAhB,GAA2B,MAAM,EAAjC,GAAsC,KAAK,IAAI,EAA3D;ADhJE,ATKqB,AU4IvB,AG3IyB,AIHrBlG,IP8IJ,AO9IIA,CJGG,CAAP,AIJa,CRFN,GCiJD,CDjJK,ACiJJ,CDjJK,ETKW,CSLR,CAAb,EAAgB,ATKS,CSLR,CTKU,ESLP,GCiJtB,CV5IsB,AU4IA,EDjJpB,EAA4B,CAAC,ACiJJ,EDjJzB,EAAiC,KCiJnC,EAAsC,IAAtC,EAA4C;ADhJxC,ATIiC,AU6InC,AG3IH,AIJSgB,IAAAA,MRFE,CQCG,GjBGwB,CSJtB,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,ATGkB,AU8IpB,AG1IJ,AINmBmC,IRDb,AQCaA,EPgJf,GDjJO,ACiJJ,CDjJK,ECiJL,CV9IC,EAXqC,CAYrC,GiBJO,CRAT,CAAkB,WAAlB,CAA8B,KAA9B;ANsBN,AMrBM,ATIE,AU6IF,AOjJ8BrC,EdqBpC,EMrBM,AQA8BA,WPiJtB,CP5HA,CAAC,ActBA,CRCK,CAAC,CCiJ2B,CP5HlC,EAAe,AO4Hf,CAAR,MDjJA,IAA+B,KAAK,CAAC,WAArC;ANsBJ,AMrBG,ACiJA,AOlJ8CgE,GRlCyB,CNwD1E,AMpBE,AQF+CA,GP8IL,AO/I/B,CduBT,CAAC,QAAL,CAAc,KAAK,SAAL,GAAiB,6BAA/B;AHjBM,AiBLgDvD,IAAAA,YjBK5C,EiBNG,EjBMC,CAAC,WAAL,KAAqB,IAAzB,EAA+B;AGkBrC,AHjBS,AU6IP,AOnJoED,IduBtE,AcvBsEA,EPmJpE,EP5HE,CAAC,AO4HA,CAAwB,IV7IpB,CU6IJ,EP5HL,AO4H2C,CP5H7B,AHjBW,CAAC,GiBPb,CdwBM,AHjBV,GAAwB,EAAxB,EGiBK,GAAe,6BAA7B;AACD,AMrBG,ATIK,AU6IH,AHvSR,AUmJ8FH,ERGxF,EQHwFA,SjBKpF,CU+II,KV7IG,GU6IK,GACT,GOtJI,ERIiB,ACkJmB,CDlJlB,GCkJtB,CADL,KDjJ0B,CAA5B,CArCwE,CAsCxE;ANsBJ,AMrBI,ATGM,AU8IH,AOtJ+GK,IAAAA,SPsJvE,CV9IrC,EU8IH,COvJQ,GPuJiD,KAAzD,EV9IgB,CAAC,IAAd,CAAmB,IAAnB;AACA,AiBT2HH,IAAAA,UjBS3H,KAAK,IiBVA;AROX,ATIK,AU6IF,AOvJmJgC,IAAAA,IRMhJ,KCiJiC,EDjJ1B,AQPF,GROK,SCiJb,CAAmD,IAAnD,CDjJ4B,CAAC,ACiJ4B,ODjJ5D,CCiJG;AACF,AOxJkK5B,IAAAA,GP8IzH,KO/I/B;ARQX,ATII,AiBXyKwB,IAAAA,EROzK,CAAC,CAAC,ITIF,AiBZO,IRQX,EAAgB,GTIH;ASHX,ATIC,AU6IH,AG1IM,AIfiLkD,EJejL,EIfiLA,EPyJvL,EOzJ2L,EAAE,CjBT3L,AiBQS,EJgBM,GAAA,CbHR,CU6IG,EAAE,IAX4B,wBDtIjB,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD;AACD,ATIG,AU6IJ,AG1IF,AIhBkMhB,GROhM,CQPgMA,EP0JhM,GDjJO,CIOH,MbHI,AU6IE,AG1IA,CbHD,CU6IG,CG1IE,CbHF,CAAC,CAAT,EaGe,WAAL,CAAuC,OAAvD;AVeF,AMrBM,ACoIwC,AO/I/B,EdgCf,CchCE,CRWI,CCoIJ,MDpIW,CAAC,KNqBC,CAAC,GAAD,EAAc,CMrBvB,CAAqB,cAArB,EAAqC,OAAO,CAAC,UAA7C;ANsBJ,AMrBG,ATGG,AU8IP,AG3IC,AIfAiB,EAAAA,CRpC0E,CNkE1E,AMpBE,GNoBC,CAAC,AUfA,AIfE,CAACC,KJeG,CAAC,CVeX,CAAa,EHlBA,CAAC,CAAC,AaGX,CVec,EHlBC,EaGG,CAAtB,CbHmC,CAAC,AaGX,CIfzB,Cd8Ba,Ac9BgBC,EjBYV,CGkBW,AHlBW,CiBZR,CAAChI,IAAL,CjBYV,AiBZoB,CjBYU,GiBZpB,EAAgB4H,CjBY1B,EAAsC,CAAC,AiBZ7B,CAA7B,EjBY6D,CAA1C,CAAN,MAAwD,CGkBrE,AHlBsE,CAAhE,EAAmE;ASDvE,ATEM,AU+IV,AG5II,AIfL;Ad8BG,AMnBE,ATEM,AaGP,KAJkB,CAKnB,GVaK,OAAL,GAAe,GAAG,CAAC,OAAnB;AACA,AHjBQ,AaIR,AIhBJ,Id6BI,GAAG,CAAC,Cc7BCI,IAAT,CAAcJ,Cd6BV,GAAc,Ac7BlB,EAAoBK,Gd6BG,Mc7BvB,EACA,Cd4BI;AACD,AHjBS,AaIR,AIfA;ARQE,ATIM,AaIR,AN5JJ,AU8II,ERME,MAAM,AQNF,CRMG,QAAP,CAAiB,CTIN,KAAL,CAAW,IAAX,CAAgB,SSJtB,CAAuC,eAAvC,EAAwD,SAAxD;AEkEC,AR5CL,AMrBI,ATGuB,AaKzB,AIdIvG,Ed2BN,Ec3BMA,ENuEK,AMxEH,EROE,ENqBF,CAAC,EMrBM,GNqBP,AMrBU,ATGS,EW8DJ,AR5CA,EHlBQ,CW8DJ,CX9DM,CSHR,CAAC,IEiEA,AX9DA,IW+DxB,KFlEgB,CAAsB,OAAtB,CAAd;AEmEF,AR7CA,AHnBuC,AiBT/BgB,IAAAA,Kd4BH,Ec7BC,KjBUiC,KAAK,EGmB5C,AHnB8C,CAAC,EGmBzB,KAAtB;AQ8CA,AR7CD,AMtBG,ATEsB,AUgJhB,AOzJSmC,IAAAA,EROX,GCkJS,GDlJH,CAAC,ETEL,EUgJA,EO1JF,CP0JiB,CDlJjB,CAAiB,YAAjB,IAAiC,KAAK,KAAK,IAA/C,EAAqD;AEoEvD,AFnEI,ATEI,AUgJR,AG3IA,ANrJJ,AUsIsCrC,IAAAA,IJe9B,MbLI,AaKE,CAAC,EIhBL,MjBWW,AaKb,KAAoB,SAApB,IAAiC,CAAC,MAAM,CAAC,QAAP,CAAgB,YAAtD,EAAoE;AF6DpE,AR7CF,AMtBM,ATEG,AUgJP,AG3IE,ANpIN,AUoHqDgE,Ed+BnD,Ec/BmDA,EJgB/C,CIjBI,CdgCF,EO4HE,CP5HF,CUfI,CAAC,MH2IM,EG3Ib,CH2IgB,AG3IA,MH2IM,CAAC,IG3IvB,CAA6B,SH2Ib,CAAsB,IAAtB,CAAlB,MG3IE,CACI,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,OAApB,CADJ,EACkC,KAAK,SADvC;AF6DD,AR7CD,AMtBI,ATEC,AaMJ,ANrIL,AUmH0DvD,CN6EpD,GFnEE,AQVkDA,CJetD,MViBO,AUdA,IJRQ,AIQJ,CJRK,EEmEf,AM9EK,EN8EoC,IAAzC,IFnEG,CEoEE,AFpEuB,IEoEnB,CFpEwB,CAAC,GEoEpB,CR9CI,KAAK,AMtBK,CAAgB,EEoExC,EFpEwB,CEqExB,AFrED,AIQG,EJR6C,AIQZ,MVcjC,CAAP,EAAyC,EMtBsB,CAAC,IEqEzC,CAAC,KFrEpB,EEqEmB,EAAU,iBAAV,EAAuC,IAAvC,CADlB,GAEA,oBAAoB,CAAC,OAAD,EAAU,iBAAV,CATtB;ARtCD,AMtBC,ATEA,AU+IH,AGzIG,ANrIP,AUkH0ED,GROpE,CQPoEA,IP4JlE,CDjJK,ACiJJ,EGzIG,CVcA,CMtBK,CAAC,CAAC,GCiJD,CAAC,EP3HE,AUdd,CAA+B,AIpB5B,CRYG,CNsBW,CMtBK,INsBA,IO2HpB,CAAyB,MGzI3B,GVcD,AO2HG,AGxIC,CHwIN,EAA0C,GGxI9B,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,UAApB,CADH;AVeD,AMtBE,ATEH,AU+IC,AGxID,ANtIL,AUiH8FH,CVjH7F,GUiH6FA,CjB7H5B,Aa+IvD,CbFP,AU6IE,CH9QC,CAAC,GJmJG,AUbA,IHwII,CAAC,QAAV,CP3HA,AInJC,CAAN,EJmJ2B,AcnClB,GVhHqB,MAAM,CAAC,IJmJhC,aInJ+B,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AJoJM,AMtBE,ACiJH,AGxIC,ANrIN,AU+GwHK,IAAAA,EdmClH,SAAS,CAAC,CcpCN,GdoCK,CAAT;AACD,AMtBG,AISF,AIvBiIH,IAAAA,mBAD7H;ARgBF,ATEJ,AU8IA,AGvIE,AIxBsJgC,IAAAA,KjBiBnJ,AU8IA,EGvIE,IbPI,AiBlBL,CjBkBN,EU8IA,EV9IgB,EU8IE,IAAlB,OV9IA,EAA+B,IaO7B,GAAoC,IAApC;AVaF,AMrBI,ATEF,AaOD,AIzBoK5B,IAAAA,EjBkBnK,CAAC,CAAC,EGmBE,EctCA,GdsCK,GAAG,AHnBZ,CAAc,IGmBG,OHnBjB,CAA0B,CAA1B,KGmBF;AMpBI,ATEH,AU6ID,AGtID,AI1BgLwB,IAAAA,KPgK1K,GOjKC,mBPiKN,GAPuB,CAQvB;AP3HA,AMpBI,ATEL,AO/HI,AU2GsLkD,IAAAA,EV3GhL,EJiJL,AcvCE,EV1GO,GJiJJ,AIjJO,CAAC,IJiJH,GIjJE,EAAgC,GAAG,MJiJnD,AIjJgB,EJiJQ,GIhJxB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AJkJD,AMpBE,AISN,ANpIF,AUwGmMhB,EJ4BjM,EI5BiMA,eJ4BhL,GAAA;AVYd,AMpBG,ATrJa,AUmSjB,AGrIA,AI9BM,IRqBF,EQnBAe,GPiKC,CGrIC,AI9BN,CRqBW,CAAC,YAAR,CAAqB,EISzB,GADe,CAEf,CHoIA,GAA+B,ID9I3B,AC8I+B,ED9IM,CC8IV,EAA/B,CATuB,CAUvB,ED/IgD,CAAC,UAA7C;AACA,AC+IJ,AGrIA,AI7BA,QAAMM,ERmBI,OAAO,AQnBF,GRmBK,AQnBFD,IRmBM,GAAJ,EAAhB,AQnBuB,GAAGJ,IAA9B,CANJ,CAQI;AdqCA,AMnBI,AC+IJ,ID/II,INmBA,GMnBO,CAAC,GAAR,CAAY,GNmBD,CAAC,KAAD,CAAf,EAAwB,EMnBpB;ANoBF,AMnBE,AC+IJ,AGtIA,AI3BAnG,EAAAA,EAAE,CAACyG,GJ2BC,EVUE,GUVG,EVUE,AcrCX,CAAc3F,IdqCE,GUVZ,EVUiB,EUVE,EI3BvB,CdqCE,EAA0B,CUVC,CAAC,QAAP,KAAoB,EJTf,OIS5B,CJTI,CISkD,CJThB,OAAlC;ANoBA,AMnBD,ATDP,AaUM,AI3BFd,EAAAA,EAAE,CAAC0G,CjBiBD,AaUA,MAAM,CVUC,AUVA,CbVC,AiBjBV,CAAavF,EjBiBA,CAAC,GAAD,AaUX,CAAgB,CbVS,EGoBvB,CAAkB,GHpBT,EGoBT,GHpBkD,AaUpD,CAA6B,IAA7B,AI3BF,EAAuC,CAAvC;AdsCG,AMnBF,ATDH,AU+IE,AGrIC,AI3BDnB,CRpDJ,CQoDIA,EAAE,CAAC2G,GjBiBC,AU+IA,KV/IK,AU+IA,COhKT,CAAarF,CjBiBD,GAAG,CAAC,MAAJ,CU+IR,CAAoB,CV/IC,IiBjBzB,EjBiB+B,AiBjBEkF,CjBiBD,MAAlC,EiBjBE,SPgKiD,CAAC,YAAD,EAAe,IAAf,CAA7C,CAAJ,EAAwE;AP1HvE,AMdL,ATNE,AU+II,AGrIH,AI3BCxG,EAAAA,EAAE,CdiCF,AcjCG4G,IjBiBE,EGoBE,CO2HC,EV/IE,AiBjBV,CdqCW,AcrCErF,EPgKA,CV/IC,CAAT,CGoBW,AO2HA,GV/IG,EU+IE,CV/IC,CAAC,EiBjBvB,EAA6B4D,CdqCD,AHpBT,CAAU,EU+I3B,CADsE,CAEtE,CVhJiB,EiBjBmB,CAACC,GjBiBC,IiBjBxC,EjBiBF,AiBjBkDD,SAAS,CAACE,EdqCnD,EAAqC,GcrC5C,EAAmEF,SAAS,CAACG,aAAV,GAA0B,CAA1B,GAA8B,CAAjG;AdsCE,AHpBL,AaWC,ANzIK,AU6GHuB,CjBcJ,CiBdIA,IV7GS,EU6GH,CV7GM,AU6GL7G,EdqCA,AcrCD,CV7GS,CAAC,AU6GLc,OV7GI,EAAgC,GAAG,CU6G5C,EAAoBgE,GV7GX,AU6GT,EdqCJ,AcrC6BzD,CdqCD,EIjJ9B,GJiJE,CIjJE,YU4GE,EAA8C,CAA9C,EAAiDgC,WAAjD,CAAN,CAbJ,CAeI,EV9GA,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AJmJF,AO2HC,KP7HK,MAEA,CO2HC,GP3HG,KAAK,AO2HA,GAAG,CACf,GAAG,KP5HqB,CO4Hf,CAAC,EP5HP,EAA2B,eO4H3B,CAA2B,KAA3B,CADY,EAEf,IAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAAzC,GACC,MAAM,CAAC,qBAAP,CAA6B,KAA7B,CADD,GAEC,EAFJ,CAFe,CAAjB,CAHsE,CAStE;APhIA,AHCC,AiBrCHrD,EAAAA,EAAE,CAAC2B,CjBqCM,KGDF,OcpCP,CAAiB3B,EAAE,CAAC4B,CdoClB,CAAkB,EHCS,GGD3B,AHC+B,CiBrCjC,GjBqCgC,IAAwB,IAAI,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP;AGFK,AHGL,AU6HM,AOpKF5B,EAAAA,EAAE,CdkCK,AclCJ6B,MdoCI,AOgIA,IPhII,CcpCX,CPoKa,AOpKE7B,CPoKb,COpKe,CAAC8B,EPoKA,GPhIG,CAAC,IOgIpB,AOpKF,CdoCqB,CAAd,AOgIqB,AOpKEmB,EdoCA,McpC9B;AdqCE,AOgIE,AOpKJjD,EAAAA,EAAE,CAAC2B,MdoCI,OcpCP,CAAiB3B,EAAE,CAACkD,KdoClB,CAAsB,EcpCxB,GdoCE;AACD,AOgIG,AOpKJlD,EAAAA,EAAE,CdkCK,AclCJ6B,MdoCI,IAAI,CcpCX,CAAe7B,EAAE,CdoCD,AcpCE8B,KdoCG,KcpCrB,EAA8BL,MdoCvB,EAAuB,AcpC9B;AdqCE,AOgIE,AOpKJzB,EAAAA,EAAE,CAACyD,MdoCI,KAAL,GAAa,McpCf,CAAwBzD,EAAE,CAACwD,GdoCzB,QcpCF,EAAwCL,eAAxC,EAAyDnD,EAAE,CAAC8B,UAA5D,EAAwEL,QAAxE,EAAkF,CAAlF,EApBJ,CAsBI;AdmCE,AOgIE,WPhIG,EOgIE,GPhIP,WOgIE,CAAoB,CAApB,EAAwB,KAAa,CAAC,CAAD,CAArC;AP/HH,AHDE,AUiIA,AG3IK,AIxBRzB,EJwBQ,AIxBRA,EAAE,CdgCK,AchCJyG,CjBkCM,EaVK,CAAC,EVWR,IcnCP,CAAc3F,EjBkCO,GAAG,KaVV,CbUgB,CaVkB,CIxBhD,MjBkCsC,CAAC,aAAT,CAAuB,EAAvB,CAA3B;AGED,AHAN,AUgIK,AG3ID,AIxBAd,EAAAA,EAAE,CAAC0G,KJwBG,IIxBN,CAAavF,CJwBb,CAAa,iBAAb,KIxBA,EAAuC,CAAvC;AdoCE,AOgIH,AG3IC,AIxBA0F,EAAAA,MAAM,CAAC7G,CJwBD,CVWC,AcnCD,EAAKc,UdmCT,CAAkB,AUXA,EIxBd,CJwBiB,CIxBGgE,CdmCxB,EcnCI,CJwBsB,CIxBGzD,KJwBR,EAAvB,YIxBM,EAA8C,CAA9C,EAAiDgC,WAAjD,CAAN,CAzBJ,CA2BI;AdkCC,AOiIH;APhIC,AUZC,AItBArD,EAAAA,EAAE,CAAC2B,GJsBC,UItBJ,CAAiB3B,EAAE,CJsBD,AItBE4B,QAApB,IJsB8B,uBAA9B,EAA8C;AAC3C,AItBH5B,EAAAA,EAAE,CAAC6B,MJsBK,KItBR,CAAe7B,EAAE,CAAC8B,EJsBf,CACI,MADJ,CAEO,AIxBV,EAA8BL,QAA9B,IJsBG,EAGO,KAAK,UAHZ,EAIO;AVSJ,AUTK,AIzBXzB,EdkCM,AclCNA,EAAE,CAAC2B,GJyBQ,EVSG,CAAC,IAAD,EAAW,AUTL,CIzBpB,CJyBsB,AIzBL3B,EAAE,CAACkD,EJyBO,MIzB3B,GJyBU;AVUV,AUVsC,AIxBtClD,EAAAA,EAAE,CAAC6B,GJwBmC,CVUjC,OAAL,AclCA,CdkCa,AclCE7B,EAAE,CJwBiC,AIxBhC8B,EJwBkC,KVUpD,CAAyB,EclCzB,EAA8BmB,QdkC9B,AclCA,CdkCsC,IAAtC,EAA4C,KAAK,OAAjD;AACD,AUXW,AIvBVjD,EAAAA,EAAE,CAACyD,EJmBA,kBInBH,CAAwBzD,EAAE,CAACwD,WAA3B,EAA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L,EAAAA,EAAE,CAACiI,KdwBG,AUnMQ,CAAC,MI2Kf,CdwBc,AcxBEjH,GdwBC,CUnMH,CAAA,EI2Kd,CdwBsB,AUnMQ,CI2KLJ,GJ3KX,GVmMG,CAAa,OcxB9B,QdwBiB,CAA6B,KAA7B,CAAjB;AUlMF,AI2KEZ,EAAAA,EAAE,CAACkI,WAAH,CAAelH,OAAf;AdwBA,AcvBA,QduBI,AcvBE4G,KduBG,EcvBI,GduBT,AcvBY5H,EAAE,CAACmI,SduBO,UcvBV,CAAuBnH,OAAvB,EAAgChB,EAAE,CAACoI,WduB/C,AcvBY,CAAhB,GdwBI,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AACpC,AcxBF,MAAGR,KdwBI,EcxBP,EAAW,CdwBT,CAAW,KcxBK5G,CdwBhB,CAAkB,KAAK,AcxBd,CdwBe,MAAxB;AACD,AOyIK,AOhKN7C,EAAAA,GdoBA,CcpBI,CAAC,EPgKQ,EPzIN,uBOyID,CACJ,KADI,EACY,IOjKd,CAAJ,EPgKM,EACwC;APzI5C,AMXC,ACqJH,AOjKAC,EAAAA,IRYS,ECqJL,COjKG,CAACC,ERYO,CQZf,CAAY2B,CRaZ,ACoJW,CDpJV,ACoJW,AOjKE,CAACqI,KRaf,CCoJI,CDnJH,ICmJuB,KDpJxB,CQbY,CReX,AQfgCrH,EPiKjC,EAAmC,GDpJnC,AQbY,CAAZ,IRegC;ANS9B,AMRA,ACkJA,AOjKFhB,EAAAA,EAAE,CAACsI,CReG,CAAC,OAAD,IAAY,AQflB,CAAiBtH,MReQ,CQfzB,MRekB,KAAmB,QAA/B,IAA2C,CAAC,OAAO,CAAC,SAAxD,EAAmE;ANSnE,AMRE,ACkJH,AOjKJ,URea,IAAI,KAAJ,CAAU,qCAAV,CAAN;ANSF,AMRC;ANSD,AOyIF,AOhKG,MAAMuH,IPgKH,EPzIE,EOyIE,GAAG,COhKV,EduBa,GACV,COwIc,CAAC,EPxIX,AcxBoBC,EPgK9B,oBOhKG,CACP,WduBU,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AMRA,ACkJF,AG7UK,AI8KL,QRaQ,ECkJF,AG7UD,CAAA,EI8KMC,IRaM,AI3LZ,EH6UU,AO/Jf,CRaoB,AI3LN,EH6UI,AO9JlB,KRY2B,CAAC,CCkJH,CAAC,ODlJxB,ECkJF,AG7UK;AVqMH,AOyIF,AO9JI,UP8JE,EPzIE,GcrBGC,KdqBK,COyIC,EPzIE,CO0If,MO/JA,CdqBuB,CAAC,CO0If,IAAK,CP1IC,EAAjB,MO0IuD,CAAC,WAAtD,IACA,gBAAgB,CAAC,WAFrB;ADlJE,ACqJF,AO3JC,QRMO,GCqJD,QDrJY,GAAG,ACqJH,CAAC,KAAD,EAAQ,IAAR,CAAnB,CDrJ4B,GAAN,CAAU,SAAV,CAApB;ANUA,AO4IH,MP5IG,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,MAAtB;AMTA,AC6KJ,AOnLEC,EAAAA,MRMQ,KQNG,GACX,IRKoB,GAAG,yBAAyB,IAC1C,SAAS,CAAC,QAAV,KAAuB;ANS3B,AMT8B,AQL5B,WdcG,YAAL,CAAkB,QAAlB;AMVqB,AQHnB,KRKE,CAAC,CAAE,EQLAC,ORKwB,CAAC,GQL9B,CRGF,CAN8B,CAS9B;ANQA,AcbD,WdaM,KAAL,GAAa,QAAb;AACD,AMRC,QAAM,gBAAgB,GAAG,YAAY,IAAI,CAAC,cAAc,CAAC,GAAf,CAAmB,SAAnB,CAA1C,CAV8B,CAW9B;ANQH,AMPG,AQPF,QAAMA,WAAN,GACA;APiLQ,AOhLJ,EPgLI,QOhLE,EPgLQ,GAAA,AOhLHC,cAAX;AdcE,AMRJ,AC2KF,AO/KI,EdYE,MMRE,CC2KH,CO/KK/I,MAAM,EdYM,CAAC,AcZJ,IRII,CNQD,AcZEgJ,EdYuB,AMPzC,MC0KN,EO/KmB,CP8KD,AO9KiBC,CPgLnC,MD3KsB,GAAG,IQLN,CAA+B,GRKjB,CAAC,UQLf,CAAf,WRKqB,EAAH,GAAuC,SAD3D;ANSF,AMPE,AC2KF,AOhLIlJ,IAAAA,IAAI,CAACC,MAAD,CAAJ,MRME,MADJ,EAEI,eAFJ,EAGI,MAAA,CAAA,MAAA,CAAA;ANKN,AMLO,AQPN,IROM,eAAe,EAAE,oBAAoB,CAAC,SAAD;ANM5C,AMNM,GAAA,EAAsD,OAAtD,CAHJ,EAf8B,CAoB9B;ANKF,AMJE,ACsKF,AO/KA+G,EAAAA,MAAM,CP+KD,EO9KL,YP8KA;APjKA,AMJE,ACs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","file":"waves-element.b6f23931.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","module.exports=\"#version 300 es\\n#define GLSLIFY 1\\n\\nin vec4 a_position;\\n\\nvoid main()\\n{\\n  gl_Position = a_position;\\n}\\n\";","module.exports=\"#version 300 es\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D u_image;\\n\\nout vec4 fragColor;\\n\\nfloat sigmoid(float x)\\n{\\n    return 1. / (1. + exp(-x));\\n}\\n\\nvec3 floatToRgb(float v, float scale) {\\n    float r = v;\\n    float g = mod(v*scale,1.0);\\n    r-= g/scale;\\n    float b = mod(v*scale*scale,1.0);\\n    g-=b/scale;\\n    return vec3(r,g,b);\\n}\\n\\nvoid main()\\n{\\n    vec2 fragCoord = gl_FragCoord.xy;\\n    vec2 iResolution = vec2(256., 256.);\\n\\n    // get current x and y.\\n    fragCoord -= 0.5; // pixel coordinates are given as mid intergers, subtract 0.5 to make it interger.\\n    ivec2 center = ivec2(fragCoord);\\n    ivec2 res    = ivec2(iResolution) - 1;\\n\\n    float pos = texelFetch(u_image, center, 0).y;\\n\\n    // vec3 col = floatToRgb(pos, 256.);\\n    vec3 col = vec3(sigmoid(pos), sin(pos), cos(pos));\\n    // vec3 col = vec3(sigmoid(pos));\\n\\n    fragColor = vec4(col, 1.0);\\n}\\n\";","module.exports=\"#version 300 es\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D i_image;\\nuniform bool is_velocity_update;\\nuniform float iTimeDelta;\\nuniform ivec3 iMouse;\\n\\nout vec4 fragColor;\\n\\n#define SPRING_CONSTANT .04\\n#define PROP_SPEED 1.\\n#define MASS 10.\\n#define FRICTION_COEFF 0.005\\n#define PEAK_SIZE .2\\n#define MAX_VELOCITY_MAGNITUDE 10.\\n#define MAX_DISPLACEMENT 64.\\n\\nfloat sigmoid(float x)\\n{\\n    return 1. / (1. + exp(-x));\\n}\\n\\nfloat peak(ivec2 center, ivec2 pos, float size)\\n{\\n    float d = length(vec2(center) - vec2(pos));\\n    float e = exp(-size * d);\\n    return e;\\n}\\n\\nvoid main()\\n{\\n    vec2 fragCoord = gl_FragCoord.xy;\\n    vec2 iResolution = vec2(256., 256.);\\n\\n    // get current x and y.\\n    fragCoord -= 0.5; // pixel coordinates are given as mid intergers, subtract 0.5 to make it interger.\\n    ivec2 center = ivec2(fragCoord);\\n    ivec2 res    = ivec2(iResolution) - 1;\\n\\n    // if it is a boundary cell velocity is 0.\\n    if(center.x == 0 || center.y == 0 || center.x == res.x || center.y == res.y)\\n    {\\n        fragColor = vec4(vec3(0.), 1.0);\\n        return;\\n    }\\n\\n    ivec2 left   = center + ivec2(-1,  0);\\n    ivec2 top    = center + ivec2( 0,  1);\\n    ivec2 right  = center + ivec2( 1,  0);\\n    ivec2 bottom = center + ivec2( 0, -1);\\n\\n    // get previous z coordinate of current cell and neighbour cells.\\n\\tfloat pos_c = texelFetch(i_image, center, 0).y;\\n\\n\\tfloat pos_l = texelFetch(i_image, left  , 0).y;\\n\\tfloat pos_t = texelFetch(i_image, top   , 0).y;\\n\\tfloat pos_r = texelFetch(i_image, right , 0).y;\\n\\tfloat pos_b = texelFetch(i_image, bottom, 0).y;\\n\\n    // get previous velocity of current cell.\\n\\tfloat vel   = texelFetch(i_image, center, 0).x;\\n\\n    // get 3d positions.\\n    vec3 pos_cv = vec3(vec2(center), pos_c);\\n\\n    if(is_velocity_update)\\n    {\\n        // UPDATE VELOCITIES\\n        // Channel 0 is previous velocities (x coordinate) and previous positions (y coordinate).\\n\\n        vec3 pos_lv = vec3(vec2(left  ), pos_l);\\n        vec3 pos_tv = vec3(vec2(top   ), pos_t);\\n        vec3 pos_rv = vec3(vec2(right ), pos_r);\\n        vec3 pos_bv = vec3(vec2(bottom), pos_b);\\n\\n        // calculate total force using Hooke's law.\\n        vec3 force_l = (pos_lv - pos_cv);\\n        vec3 force_t = (pos_tv - pos_cv);\\n        vec3 force_r = (pos_rv - pos_cv);\\n        vec3 force_b = (pos_bv - pos_cv);\\n\\n        force_l = normalize(force_l) * (length(force_l) - 1.) * SPRING_CONSTANT;\\n        force_t = normalize(force_t) * (length(force_t) - 1.) * SPRING_CONSTANT;\\n        force_r = normalize(force_r) * (length(force_r) - 1.) * SPRING_CONSTANT;\\n        force_b = normalize(force_b) * (length(force_b) - 1.) * SPRING_CONSTANT;\\n\\n        // gravity\\n        vec3 force_g = vec3(0.); // ZERO GRAVITY\\n        // vec3 force_g = vec3(0., 0., -0.001 * MASS); // VERY LOW GRAVITY\\n        // vec3 force_g = vec3(0., 0., -1.62 * MASS); // MOON\\n        // vec3 force_g = vec3(0., 0., -9.807 * MASS); // EARTH\\n\\n        vec3 total_force = force_l + force_t + force_r + force_b + force_g;\\n\\n        // calculate acceleration and velocity.\\n        float acc = total_force.z / MASS;\\n        vel = (1. - FRICTION_COEFF) * vel + acc * iTimeDelta * PROP_SPEED;\\n        //vel = (1. - FRICTION_COEFF * screen_center_dist(center)) * vel + acc * iTimeDelta * PROP_SPEED;\\n\\n        // clamp velocity.\\n        vel = clamp(vel, -MAX_VELOCITY_MAGNITUDE, MAX_VELOCITY_MAGNITUDE);\\n\\n        // output current velocity and previous position.\\n        fragColor = vec4(vel, pos_c, 0., 1.0);\\n    }\\n    else\\n    {\\n        // UPDATE POSITIONS\\n        // Channel 0 is previous velocities (x coordinate) and previous positions (y coordinate).\\n\\n        // calculate new position.\\n        pos_c = pos_c + vel * iTimeDelta * PROP_SPEED;\\n\\n        // if LMB is down insert a peak at the click position.\\n        ivec2 click = iMouse.xy;\\n        if(iMouse.z == 1)pos_c += 10. * peak(center, click, PEAK_SIZE);\\n        // pos_c = 0.;\\n\\n        // clamp the position.\\n        pos_c = clamp(pos_c, -MAX_DISPLACEMENT, MAX_DISPLACEMENT);\\n\\n        // output current velocity and current position.\\n        fragColor = vec4(vel, pos_c, 0., 1.0);\\n    }\\n}\\n\\n/*\\n\\n\\nfloat screen_center_dist(ivec2 pos)\\n{\\n    ivec2 screen_center = ivec2(iResolution) / 2;\\n    float d = length(vec2(pos) - vec2(screen_center));\\n    return sigmoid(d);\\n}\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\\n{\\n\\n}\\n*/\\n\\n/*\\n\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\\n{\\n\\n}\\n*//*\\n\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\\n{\\n\\n}\\n*//*\\n\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\\n{\\n\\n}\\n*//*\\n\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\\n{\\n\\n}\\n*/\";","import { LitElement, html, css } from 'lit-element';\r\nimport vertexShaderSource from './shaders/vertex-shader.vert';\r\nimport fragmentShaderSource from './shaders/fragment-shader.frag';\r\nimport updateShaderSource from './shaders/update-shader.frag';\r\n\r\nconst cout = console.log.bind(console);\r\n\r\nfunction peak(uv, pos, size)\r\n{\r\n    const dx = uv.x - pos.x, dy = uv.y - pos.y;\r\n    const d = Math.sqrt(dx * dx + dy * dy);\r\n    return Math.exp(- size * d);\r\n}\r\n\r\nfunction calculate_initial_condition(R, C)\r\n{\r\n    // The initial condition is a peak at the center of the screen.\r\n    const arr = new Float32Array(R * C * 2);\r\n    const peak_pos = {x: 0.5, y: 0.5};\r\n    const peak_size = 10;\r\n    for(let r = 1; r < R - 1; r++)\r\n    {\r\n        for(let c = 1; c < C - 1; c++)\r\n        {\r\n            const i = 2 * (r * C + c);\r\n            const uv = {x: (c / R), y: (r/ R)};\r\n            arr[i + 1] = peak(uv, peak_pos, peak_size); // position\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction init(canvas)\r\n{\r\n    const initial_condition = calculate_initial_condition(256, 256);\r\n\r\n    const gl = canvas.getContext('webgl2');\r\n\r\n    if (!gl) {\r\n        alert('No webgl2 support on your device!!');\r\n        return;\r\n    }\r\n\r\n    const ext = (gl.getExtension('EXT_color_buffer_float'));\r\n    if (!ext) {\r\n        alert('No support for rendering to floating point textures on your device!!');\r\n        return;\r\n    }\r\n\r\n    // Compile all the shaders.\r\n    const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n    const updateShader = createShader(gl, gl.FRAGMENT_SHADER, updateShaderSource);\r\n    const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n    // Create and link all shader programs.\r\n    const updateProgram = createProgram(gl, vertexShader, updateShader);\r\n    const program = createProgram(gl, vertexShader, fragmentShader);\r\n\r\n    // Get locations of shader inputs.\r\n    const positionAttributeLocation = gl.getAttribLocation(program, 'a_position');\r\n    const isVelocityUpdateLocation = gl.getUniformLocation(updateProgram, 'is_velocity_update');\r\n    const updateImageLocation = gl.getUniformLocation(updateProgram, 'i_image');\r\n    const iTimeDeltaLocation = gl.getUniformLocation(updateProgram, 'iTimeDelta');\r\n    const iMouseLocation = gl.getUniformLocation(updateProgram, 'iMouse');\r\n    const imageLocation = gl.getUniformLocation(program, 'u_image');\r\n\r\n    // Configure texture 1.\r\n    const texture1 = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture1);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n    const mipLevel = 0, internalFormat = gl.RG32F, texWidth = 256, texHeight = 256, texBorder = 0, srcFormat = gl.RG, srcType = gl.FLOAT;\r\n    gl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, texWidth, texHeight, texBorder, srcFormat, srcType, initial_condition);\r\n\r\n    // Configure texture 2.\r\n    const texture2 = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture2);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n    gl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, texWidth, texHeight, texBorder, srcFormat, srcType, new Float32Array(256 * 256 * 2));\r\n\r\n    // Create a framebuffer for rendering to texture.\r\n    const attachmentPoint = gl.COLOR_ATTACHMENT0;\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, texture2, 0);\r\n\r\n    // Check framebuffer status and report errors.\r\n    const frameBufferStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n    const statuses = {\r\n        [gl.FRAMEBUFFER_COMPLETE]: 'complete',\r\n        [gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT]: 'incomplete attachment',\r\n        [gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT]: 'missing attachment',\r\n        [gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS]: 'height and width of attachment are not the same',\r\n        [gl.FRAMEBUFFER_UNSUPPORTED]: 'format of the attachedment is not supported or some other conditions',\r\n        [gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE]: 'the values of gl.RENDERBUFFER_SAMPLES are different among different attached renderbuffers or are non zero if attached images are a mix of render buffers and textures'\r\n    };\r\n    // cout('framebuffer status:', frameBufferStatus, statuses[frameBufferStatus]);\r\n    if(frameBufferStatus != gl.FRAMEBUFFER_COMPLETE)\r\n    {\r\n        alert('Failed to create a framebuffer!!');\r\n        return;\r\n    }\r\n\r\n    // Upload rectangle coordinates.\r\n    const positions = [\r\n        -1, -1,\r\n        -1,  1,\r\n         1,  1,\r\n         1,  1,\r\n         1, -1,\r\n        -1, -1\r\n    ];\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    // Create a VAO to read the position data.\r\n    const size = 2, type = gl.FLOAT, normalize = false, stride = 0, offset = 0;\r\n    const vao = gl.createVertexArray();\r\n    gl.bindVertexArray(vao);\r\n    gl.enableVertexAttribArray(positionAttributeLocation);\r\n    gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n    // Data to handle mouse events.\r\n    const mouseData = {mouse_x: 0, mouse_y: 0, mouse_updated: false, is_dragging: false};\r\n\r\n    canvas.addEventListener('mousedown', e => {\r\n        mouseData.is_dragging = true;\r\n        const rect = e.target.getBoundingClientRect();\r\n        mouseData.mouse_x = Math.floor(e.clientX - rect.left); //x position within the element.\r\n        mouseData.mouse_y = Math.floor(rect.bottom - e.clientY);  //y position within the element.\r\n        mouseData.mouse_updated = true;\r\n        // cout(mouseData.mouse_x, mouseData.mouse_y, mouseData.mouse_updated);    \r\n    });\r\n    canvas.addEventListener('mousemove', e => {\r\n        if(mouseData.is_dragging)\r\n        {\r\n            const rect = e.target.getBoundingClientRect();\r\n            mouseData.mouse_x = Math.floor(e.clientX - rect.left); //x position within the element.\r\n            mouseData.mouse_y = Math.floor(rect.bottom - e.clientY);  //y position within the element.\r\n            mouseData.mouse_updated = true;\r\n            // cout(mouseData.mouse_x, mouseData.mouse_y, mouseData.mouse_updated);    \r\n        }\r\n    });\r\n    canvas.addEventListener('mouseup', () => {\r\n        mouseData.is_dragging = false;\r\n    });\r\n    canvas.addEventListener('mouseleave', () => {\r\n        mouseData.is_dragging = false;\r\n    });\r\n    // Arguments passed to update step.\r\n    const args = {\r\n        gl, program, attachmentPoint, updateProgram, vao, iMouseLocation, iTimeDeltaLocation, isVelocityUpdateLocation, imageLocation, updateImageLocation, frameBuffer, texture1, texture2, prev: 0, mouseData\r\n    };\r\n    window.requestAnimationFrame(step.bind(null, args));\r\n}\r\n\r\nfunction step(args, timestamp)\r\n{\r\n    // Update velocities and positions and render a single frame.\r\n\r\n    const {\r\n        gl, program, attachmentPoint, updateProgram, vao, iMouseLocation, iTimeDeltaLocation, isVelocityUpdateLocation, imageLocation, updateImageLocation, frameBuffer, texture1, texture2, prev, mouseData\r\n    } = args;\r\n    const deltaTime = timestamp - prev;\r\n\r\n    // Run the update program for veloctiy update.\r\n    gl.useProgram(updateProgram);\r\n    gl.uniform1i(isVelocityUpdateLocation, 1);\r\n    gl.uniform1f(iTimeDeltaLocation, deltaTime);\r\n    gl.uniform3i(iMouseLocation, mouseData.mouse_x, mouseData.mouse_y, mouseData.mouse_updated ? 1 : 0);\r\n    render(gl, updateProgram, vao, updateImageLocation, 0, frameBuffer);\r\n\r\n    // Swap textures.\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture2);\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture1);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, texture1, 0);\r\n\r\n    // Run the update program for position update.\r\n    gl.useProgram(updateProgram);\r\n    gl.uniform1i(isVelocityUpdateLocation, 0);\r\n    render(gl, updateProgram, vao, updateImageLocation, 0, frameBuffer);\r\n\r\n    // Swap textures again.\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture1);\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture2);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, texture2, 0);\r\n\r\n    // Run the render program.\r\n    render(gl, program, vao, imageLocation, 0, null);\r\n\r\n    mouseData.mouse_updated = false;\r\n    window.requestAnimationFrame(step.bind(null, {...args, prev: timestamp}));\r\n}\r\n\r\nfunction render(gl, program, vao, imageLocation, texture, frameBuffer)\r\n{\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    // clear viewport\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    // render\r\n    gl.useProgram(program);\r\n    gl.bindVertexArray(vao);\r\n    gl.uniform1i(imageLocation, texture);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n}\r\n\r\nfunction createShader(gl, type, source)\r\n{\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if(success)return shader;\r\n\r\n    cout('Failed to compile the shader:', type);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n}\r\n\r\nfunction createProgram(gl, vertexShader, fragmentShader)\r\n{\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if(success)return program;\r\n\r\n    cout('Failed to compile the shader program.');\r\n    console.log(gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n}\r\n\r\nexport class WavesElement extends LitElement\r\n{\r\n    static get styles()\r\n    {\r\n        return css`\r\n            /* Selects the host element */\r\n            :host { display: inline-block;}\r\n            /* Selects the host element if it is hidden */\r\n            :host([hidden]) { display: none; }\r\n        `;\r\n    }\r\n    constructor()\r\n    {\r\n        super();\r\n        this.setupCanvas();\r\n    }\r\n    async setupCanvas()\r\n    {\r\n        await this.updateComplete;\r\n\r\n        const canvas = this.shadowRoot.getElementById('webgl-canvas');\r\n        init(canvas);\r\n    }\r\n    render()\r\n    {\r\n        return html`\r\n            <canvas id=\"webgl-canvas\" width=\"256\" height=\"256\"></canvas>\r\n        `;\r\n    }\r\n}\r\n\r\ncustomElements.define('waves-element', WavesElement);"]}